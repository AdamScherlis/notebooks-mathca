(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    213109,       4339]
NotebookOptionsPosition[    212220,       4306]
NotebookOutlinePosition[    212555,       4321]
CellTagsIndexPosition[    212512,       4318]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.670962202941893*^9, 3.670962204513023*^9}, {
  3.670962555081571*^9, 3.670962557302875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fill", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Axis", ",", 
       RowBox[{"Darker", "[", "Green", "]"}]}], "}"}]}], ",", 
    RowBox[{"2", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", "Green"}], "}"}]}], ",", 
    RowBox[{"3", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"Lighter", "[", 
        RowBox[{"Lighter", "[", "Green", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"4", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "3", "}"}], ",", "LightGreen"}], "}"}]}], ",", 
    RowBox[{"5", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "4", "}"}], ",", "LightRed"}], "}"}]}], ",", 
    RowBox[{"6", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "5", "}"}], ",", 
       RowBox[{"Lighter", "[", 
        RowBox[{"Lighter", "[", "Red", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"7", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "6", "}"}], ",", "Red"}], "}"}]}], ",", 
    RowBox[{"8", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "7", "}"}], ",", 
       RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"fill2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Axis", ",", "LightGreen"}], "}"}]}], ",", 
    RowBox[{"2", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"Lighter", "[", 
        RowBox[{"Lighter", "[", "Green", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"3", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "2", "}"}], ",", "Green"}], "}"}]}], ",", 
    RowBox[{"4", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"Darker", "[", "Green", "]"}]}], "}"}]}], ",", 
    RowBox[{"5", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "4", "}"}], ",", 
       RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
    RowBox[{"6", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "5", "}"}], ",", "Red"}], "}"}]}], ",", 
    RowBox[{"7", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "6", "}"}], ",", 
       RowBox[{"Lighter", "[", 
        RowBox[{"Lighter", "[", "Red", "]"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"8", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "7", "}"}], ",", "LightRed"}], "}"}]}]}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.670962275465563*^9, 3.670962356917581*^9}, {
  3.6709625120410757`*^9, 3.670962523904874*^9}, {3.6709630496573963`*^9, 
  3.670963064756071*^9}, {3.670963114374571*^9, 3.670963159188054*^9}, {
  3.670963320207822*^9, 3.6709633967231283`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Axis", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[2, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.4444444444444444, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 2/3, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[2, 3], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[2, 3], 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "2", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[5, 9], 1, 
              Rational[5, 9]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.37037037037037035`, 0.6666666666666666, 0.37037037037037035`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[5/9, 1, 5/9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[5, 9], 1, 
              Rational[5, 9]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[5, 9], 1, 
        Rational[5, 9]],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "3", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.88, 1, 0.88], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5866666666666667, 0.6666666666666666, 0.5866666666666667],
           FrameTicks->None,
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.88, 1, 0.88]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.88, 1, 0.88]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.88, 1, 0.88],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"5", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "4", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0.85, 0.85]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1, 0.85, 0.85]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.85, 0.85],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"6", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "5", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[5, 9], 
              Rational[5, 9]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.37037037037037035`, 0.37037037037037035`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 5/9, 5/9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[5, 9], 
              Rational[5, 9]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[5, 9], 
        Rational[5, 9]],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"7", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "6", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"8", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "7", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[2, 3], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.4444444444444444, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[2/3, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 3], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[2, 3], 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670962357659719*^9, 3.6709625244913607`*^9, {3.670963053158546*^9, 
   3.670963065103703*^9}, {3.670963115133171*^9, 3.6709631595229816`*^9}, 
   3.670963339154769*^9, 3.67096339711966*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Axis", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.88, 1, 0.88], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5866666666666667, 0.6666666666666666, 0.5866666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0.88, 1, 0.88]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.88, 1, 0.88]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.88, 1, 0.88],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[5, 9], 1, 
              Rational[5, 9]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.37037037037037035`, 0.6666666666666666, 0.37037037037037035`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[5/9, 1, 5/9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[5, 9], 1, 
              Rational[5, 9]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[5, 9], 1, 
        Rational[5, 9]],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "2", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "3", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[2, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.4444444444444444, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 2/3, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[2, 3], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[2, 3], 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"5", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "4", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[2, 3], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.4444444444444444, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[2/3, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 3], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[2, 3], 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"6", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "5", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"7", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "6", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[5, 9], 
              Rational[5, 9]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.37037037037037035`, 0.37037037037037035`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 5/9, 5/9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[5, 9], 
              Rational[5, 9]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[5, 9], 
        Rational[5, 9]],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", 
   RowBox[{"8", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "7", "}"}], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.85, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.5666666666666667, 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0.85, 0.85]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1, 0.85, 0.85]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.85, 0.85],
       Editable->False,
       Selectable->False]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670962357659719*^9, 3.6709625244913607`*^9, {3.670963053158546*^9, 
   3.670963065103703*^9}, {3.670963115133171*^9, 3.6709631595229816`*^9}, 
   3.670963339154769*^9, 3.670963397142768*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Accumulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"W", "[", 
      RowBox[{"7", ",", "p"}], "]"}], ",", 
     RowBox[{"W", "[", 
      RowBox[{"6", ",", "p"}], "]"}], ",", 
     RowBox[{"W", "[", 
      RowBox[{"5", ",", "p"}], "]"}], ",", 
     RowBox[{"W", "[", 
      RowBox[{"4", ",", "p"}], "]"}], ",", 
     RowBox[{"L", "[", 
      RowBox[{"4", ",", "p"}], "]"}], ",", 
     RowBox[{"L", "[", 
      RowBox[{"5", ",", "p"}], "]"}], ",", 
     RowBox[{"L", "[", 
      RowBox[{"6", ",", "p"}], "]"}], ",", 
     RowBox[{"L", "[", 
      RowBox[{"7", ",", "p"}], "]"}]}], "}"}], "/.", 
   RowBox[{"(", 
    RowBox[{"p", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}], ")"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Accumulate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"W", "[", 
      RowBox[{"4", ",", "p"}], "]"}], ",", 
     RowBox[{"W", "[", 
      RowBox[{"5", ",", "p"}], "]"}], ",", 
     RowBox[{"W", "[", 
      RowBox[{"6", ",", "p"}], "]"}], ",", 
     RowBox[{"W", "[", 
      RowBox[{"7", ",", "p"}], "]"}], ",", 
     RowBox[{"L", "[", 
      RowBox[{"7", ",", "p"}], "]"}], ",", 
     RowBox[{"L", "[", 
      RowBox[{"6", ",", "p"}], "]"}], ",", 
     RowBox[{"L", "[", 
      RowBox[{"5", ",", "p"}], "]"}], ",", 
     RowBox[{"L", "[", 
      RowBox[{"4", ",", "p"}], "]"}]}], "}"}], "/.", 
   RowBox[{"(", 
    RowBox[{"p", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}], ")"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.670962843948565*^9, 3.670962844126459*^9}, {
   3.670963005612234*^9, 3.670963009135971*^9}, 3.670963177033647*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"20", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
    SuperscriptBox["p", "3"]}], ",", 
   RowBox[{
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}], "+", 
    SuperscriptBox["p", "4"]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}], "+", 
    SuperscriptBox["p", "4"], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], " ", 
     SuperscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}], "+", 
    SuperscriptBox["p", "4"], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], " ", 
     SuperscriptBox["p", "4"]}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "2"], " ", 
     SuperscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}], "+", 
    SuperscriptBox["p", "4"], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], " ", 
     SuperscriptBox["p", "4"]}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "2"], " ", 
     SuperscriptBox["p", "4"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "3"], " ", 
     SuperscriptBox["p", "4"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.670962779891439*^9, 3.6709628445787477`*^9, 
  3.670963009429789*^9, 3.670963178451069*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "p"}], ")"}], "4"], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "3"], " ", 
     SuperscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "2"], " ", 
     SuperscriptBox["p", "4"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "3"], " ", 
     SuperscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], " ", 
     SuperscriptBox["p", "4"]}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "2"], " ", 
     SuperscriptBox["p", "4"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "3"], " ", 
     SuperscriptBox["p", "4"]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
     SuperscriptBox["p", "3"]}], "+", 
    SuperscriptBox["p", "4"], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], " ", 
     SuperscriptBox["p", "4"]}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "2"], " ", 
     SuperscriptBox["p", "4"]}], "+", 
    RowBox[{"20", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "3"], " ", 
     SuperscriptBox["p", "4"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.670962779891439*^9, 3.6709628445787477`*^9, 
  3.670963009429789*^9, 3.670963178455802*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"20", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
      SuperscriptBox["p", "3"]}], ",", 
     RowBox[{
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}]}], ",", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}], "+", 
      SuperscriptBox["p", "4"]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}], "+", 
      SuperscriptBox["p", "4"], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], " ", 
       SuperscriptBox["p", "4"]}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}], "+", 
      SuperscriptBox["p", "4"], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], " ", 
       SuperscriptBox["p", "4"]}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "2"], " ", 
       SuperscriptBox["p", "4"]}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}], "+", 
      SuperscriptBox["p", "4"], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], " ", 
       SuperscriptBox["p", "4"]}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "2"], " ", 
       SuperscriptBox["p", "4"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "3"], " ", 
       SuperscriptBox["p", "4"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "fill"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "None"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "4"], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "3"], " ", 
       SuperscriptBox["p", "4"]}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "2"], " ", 
       SuperscriptBox["p", "4"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "3"], " ", 
       SuperscriptBox["p", "4"]}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], " ", 
       SuperscriptBox["p", "4"]}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "2"], " ", 
       SuperscriptBox["p", "4"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "3"], " ", 
       SuperscriptBox["p", "4"]}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], "4"], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", "p"}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "2"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "4"], " ", 
       SuperscriptBox["p", "3"]}], "+", 
      SuperscriptBox["p", "4"], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], " ", 
       SuperscriptBox["p", "4"]}], "+", 
      RowBox[{"10", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "2"], " ", 
       SuperscriptBox["p", "4"]}], "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "3"], " ", 
       SuperscriptBox["p", "4"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "fill2"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.670961264149941*^9, 3.670961306761354*^9}, {
   3.670961467270721*^9, 3.670961499729989*^9}, {3.670961546854938*^9, 
   3.670961553002282*^9}, 3.6709615858390913`*^9, {3.6709621822825317`*^9, 
   3.6709622289183702`*^9}, {3.6709623652153254`*^9, 
   3.6709623982772408`*^9}, {3.670962490616847*^9, 3.670962490841165*^9}, {
   3.670962527623911*^9, 3.670962609152248*^9}, {3.6709626759947653`*^9, 
   3.670962715924808*^9}, {3.670962767841344*^9, 3.6709628596979227`*^9}, {
   3.6709628980534*^9, 3.67096289854399*^9}, {3.67096297999699*^9, 
   3.670963020349197*^9}, 3.670963184201786*^9, 3.670963344929248*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxE3Hk0Vfv/+HGpRCVFhIQkJTIXKfsllSgkU5TMMoSQWZEplGQOCZmnkISb
mWPIPJ9jnufhRCqZ+u3PWj/v7/3nrhads88+e7/e732fj3VPGjxRMaakoKBY
o6Wg+N+/bxnPtFfMqmMU//8fIzsyiz9LGNT6lhDklbmAOkz+44/lJDjMfLhb
fEMFCttEbt5kz4EHVo8sS+IsQNNroK/6dT68/i00QK/kBk8+Pz0fufofCN+M
UeXseQ0rQT31u3aVQ1x4z8t/+eFQX1lb3nqlCji/JIXv2hMPZs7ytFoLBIj4
Zc56bDoZKmlE/mVZ1sEu3huaWWuZkJJI2GY93QDVVgYET7fPIM1UmqCa3QR9
Ub52B0bz4XzdQFHtuVaY4Ht7MuhCEXRJqy6lL7WBgFxQzouSYrDY/7ijW6gD
Vg69oK3vL4NG0r3SQ4Gd0Ji0u3xpowJUZTVHJya6YEaJW3FIrQouxr++F8/d
A+nCTO6/jKthZDu0y9SdCA28l638VAgwKd+ayFRNgltjP9b+rBAgN2rYuf1k
H5RtcQttP6iBZL/d/rwu/WD7edeA0bMa+GV4f+5R8QAEeIl2ntGugQPXX6p8
PjYEoiVmYcF/CPDs8OTBUe1huF1nQSzVJcDBMj4KouIIXKaoT5GJqgYphztb
1esjoHyGvjMvqApikgIST8WMwu08rW5d20rQURdrprk9Bt7jDeetWCrga7dx
aNnvMShvz5s20yqFS025lFMR4/CWOdivL+QbcN549Cv0+gTIRRff4fEohAti
F4LzpyYgoIXOxTQ5H4ZX3nxP9JkEOU6+f0XTn2FB9K4Pi8gUOIroxeuyZQPP
/Pm5XZ1T8Iyv28aHPR0I3PYd1h7TsN/AUjuCJwnednUbqnDPAJ1ENuWn9Tgg
q1YEUxJm4HTAfIdJUyTkqTNeu2QzC0lc70jyZ0Igsdnrwxj9HJRRRdkqHH4F
f+q0Xemr5uCISBGvKeYBI8Hlvw5bzUNTpkNtioM9/G6/zOJ5aAH+SVupdTuY
gXUYV4VzyQJ8UcsWSP6kBceauQ5P6CxC1FFxxhbmm6DanbXJtr0IvVta0pwF
QrCi+9FiIGMJ1v6qk/UrD0C5Xo7PIQUycNXUGh690YG94zjw698/MuzcD14e
r51esXhDWN+iwMihn5ik0lWBr9uxkMJ5bq8avTToiWCrx6kzoPVd6hCniz70
/ZIsf0qbB79HJ7l+WduDEevZPQLShSBzx/9k3B9vEDp5eqPJpQQUW0Wx2nfB
wLmXRSVtqAIyierKAYnRcP2nTUyVdzdcbfKw+jReBa9b6SL2dPTAiKXAea2J
ajBIEi6BkyRwOU2TgGUQoMGGeMjOtheGDcT7XgnVwLlgG4+t5j6QOLbtv2xX
A4q/sy/Vsw4A+9gdi69Pa4BCzZo9wGwQykgDy/wiNXA946ug/Lch+DSvzPEw
jwC3ZGNf3twchkfynM9UKAnAHV3qppg0Am+TB1PIrNXQ1mU+94F1FlSLr6fo
q4ZDRrDCD9qqWUjRaCuVXQyE5lvWAS7mc2CnRbDxf+gDC/yBRUeY5yGXxjfa
2MkV5j8/95Uvm4c96jKSlIXWICqas/DceAFi609n3DQzAEIu10w27SLUf0lV
lvp4Fy60m7x8kb0IE2kpA3vbr0ACa2r+M7UlCJQZ2iUVyAmaemed7TeW4PlH
6amnzj8xPumHUvtSyLBIKDloPRGCVbyvvvCGxQ5ejYg137Ouxu7oM3NzBERB
6UFK93JjERAbr75F9TwVfksyCB6XuA/HBc0/327JBaaKbtl9GTYwpORJXpv8
CvNuTnlvFz1A2UwhLE+8GAgsq9dEH72FJh6Z92GC+H3XL276ly0SmtgmyzrF
umGtg8uu8UMVjBQ2O6i49sB6erLOqdRq+NhuIKfWRoSEn+0DUi8IQHqoqlXD
2gvackbVlEdrwDI87fm0Yx90DamqpJvXgDNojTo19IOJyvqvBecaWH9g7O1M
PwijF2NWZOVr4OyfE1e3TIcg1aTuaHYPAQwzK+XDsoZhoN3fzleEAMxZdkDv
PAKjHvc5Uh5Ug14YI6ZMnoG5ogARBap3kP0zNyoxahZa6A5bJdQGgcTB9bBs
bA4adr904UryBVuXXyz0i3PQ99EiV73XDaY+xmLnI+ZBe9HkyMMtWwjz/EVJ
IbkArkFCkoOlxhCdwKV2dHIBvD1qulMN1YHnzo3beS8XQd8vO1HXUAbW/6ST
FHiXYKu4tmp04QycHplYOdu5BMsB3UvTB3aBvfLL0f3OZKBW78/O9yrEeC5c
0FDiCYTkl/RlTL50EHLiQkyyRAIMNy7I1r+RhwCPog/CoVnQasreMJLwCKJK
DjS/V/gCNk1N+w6mOsPcZDOzYXQRuLvuVoEbflD6fdv5c1c3uLKdkLPkqYaL
03e/FpwlQu0gq7bHCfx6d6QQ4rMlwfnhC43ubQQo9XlA4GrohSRenZev5Gpg
JkDSh4G7H+TvZt7sdamBk5/2hBx7PAD77YZ315rVAJWCa1FsxSDsk+g1nWOq
Ab2HiuzhB/D5rm8r+PkVAVIEZ2Sd5mZhj2p0s75VABj4T3nJRsxB2JdU/6HL
XvBomOfekWvzkCB39hmvphP8qNRuM56aB4OWik+61yyhY9y0ZyNoAZLkeQp3
TevAUhnXM/mLi3A8oMHf9j8FuK76qlKpZxGO3eg1C+a/CLekkoKy3Jfg1IyC
0rktRggYefyv8hQZfE1fFKsLT2CjgmJRuzvJsNwuPOt6QRWTbBPNDWExAvUP
/SsZH0OxvrndHF0dEXBzTKKf5uU5iC2mcnAVT4HF2rtfrz3WgOJGj4xCgVy4
aff6Fe3wEzhuJmg8JPEVCESy3bDHC9CjHdE7HfENnDVmEn5GvIEbTz65M+aW
w1uGI8vMkxEQ9JldeeBgN2RyxNbnO1fBgSx+k793euDPYZfd+32rQdrUNXAo
lQjm/pUbJDMCDKkGby8ukYDqW8c12j01EHiM4Dqg0AdbD+NFRgxrgM5I4MLd
hH4o4dVR+OhaA2vDuuI/pgaAPyHOHVRrIPpEh/w96SHwOjgQFzhNgB8PVTO/
eQ/DM73f1V7yBKC/0BZnZzgCNw08X/e6VMPZ1TmT9N4ZMI/Tuvhr6h3kchta
WfnMwunEgYJhu2BYWsCi6s/OwWyt/tFn3X4gdjL9VghxDmYcmwZV7r6AcRZB
Vg7PeThVSfnypagd3MhgPnSVewEKVOSl7d+YgM97rv11bfj8Ow5UrI73gP1Q
/vlG20VQYA+6k5h8HVIeZc7lMywBlqcueMmQHw5yVudQli/B54zukZiFvRBN
iv4SYEAGg6/CxQFRNZjaAz2TBQ5/0Lg/Nu9kSQmaYxksFAPx4PKFyhIcr8Nv
rY36FMVMeOEuPfxq1RAktU7V7vuUB2LJ7JYbzx3hDIVroNxiIZDdbp+iiHgJ
L3QkDnzL6gYDRWmKp3vx+dGfm/xwqwfiffquWO8iQDUti8NXeRKYdfh+J5YS
gOAaZXY7thdq5et3s0nVAA2dhhf13z7o+yKK2TjVQGF77yRZZgA872ifE3tS
A7vb7B8zhg+CcY5CEt3pGujw2nWGPDYE7Y0/VZdjCZCmF338Ws8snGFdUfya
/gaYzfn89F7Mwal/bxROynkD78s+3+Dz86C0dH78zogzLF1azLzXMQ8unPEW
2QpPwPNAwOgV1wUIGu9hmBzTg95CLpHNk4twQOn8ky/Dd+AK/d9Ek6pFGFyZ
MuzXuAS/M5MTjpovQeiBkw83uI6DLeetkvd0ZGDlD7r30GYBoyqSe+xTQoaW
urZ1aTYnzPCOJcNdHjfw/x7s4CU1ghGI/LzmN2JgxXLDiCtdAhr2e3AEV6VB
UEjoYpuRDrSbMObHyPYChD1/Q+SqAQWGN+4rCX1wyrQ+R8u6BsZZvd/Er/TD
94O3P8s51sAW0bydEhuEy711TNJYDUzc7/hTdmcB1lVLXXT2GUFOOles/t8F
8PF6lc5qqwoCQT2mUdGLYOAZGFR+RxqU/NNqJ7AlEPQsnMjYPgVYPNXFO9NL
sK4lGL1CvY4p19vQ+b8lg8vfh19bh1KwZ/t8uDQjgoFrM1Ylr54ZmjXL2W+H
JwJd7acvBN07UPD2BMf6r174x7H6r1ulBmr3c/iy3+mHmDMWcA7f7772E8Qg
dAC+njnHY4Hfjwphx4cvzC3CCXtayhpFUYhtSXC7Hr4E4Sb5pOl3RyAl/o3M
jDgZuiNr/Kj/68dKUjnqPGbJwH2W2+iRDgMmcOlo8gcWNWg7/rj77TdDLC7H
OUbAIRyupj/sMuHngc4zaQcKwpLBb70/jpiqBkxix5X6S3Pw+dR8u1jCCiR/
7+W8O5YPQiI1m1+S3MF0mLdO58Y32P/u369v+QHARiGT9FqzHHotFUyOKETA
imtx5MhaF3zrWVTVN8GfU3i0hxUke+Bi6MrvWIdqCPri+zkxlAj/PVY8oqRD
gDElobuUvSSYWmr3TdkgQBypfV1DvA+eMIQo0evVwP3fzLpSgf1Qa1Rw6SR+
fn6fHAziax8A2yTBlu57+PUuxK+0h38IPL18yJlkAlwUZxtoth6G0KdtUv+p
EeDt363WZM0R0LyaHnfmVTUcTOre7G6ZgWsWor6MWpEgLFVCUnXF128vb+q3
zcEg91D/ffeJOdj6Tn8v38YfIlYpDTua5sB525i/pfYFjKn/2cfsNA8yomGC
dp12wI5lhOqzLADlHl7HUTdTWH/HZRxfuwAOvHS3Z99oQrTlfCzRdBGG28dd
/pBuwOaJrJ8z1Eug2BMxWNwlAP9AJJCcvwQn09/L1hRQQxZbcoziPTL4uVBn
amg2YRZLv54Ux7yETAUdYWWKDewbwVjz0/l4eE9hF35JUAb4amN0RjMywPI6
vsvPNYBXZ3KqpB7mgc0qfFh/6gCyb+7KF0cUAk2hgewXgg+Mne1WLYvshivH
zO3TV6vAQX3kxOfpHiju7Lq992c10GudjnK5QIKE7OCbvPkEqHOQKNH16wVx
E8uSPxdrgLXNkNJrvA+MTpH0uxxqgNKIQDcgMABT5xecQ2zwP9P/JCi7D0Lg
LxbLcj78ee3dA76YliF49aZxvjKNALzOP33ONs1CyeR8gf2tQLDtU3xlaT8H
ybUqMjnt3vBKSyy+nWseTD8mj2tmuMCC/dco5Xp8/kdq3Dl73hrux50weWi9
APNc53n5EvVBKZ/rTfexRXhnm/clh6AMRTZCjHZFi6C5RT//ieYyKBimZMrp
LoEbzQ1Z2j3sYCz9X7TfXjJ0rTAxncv7gTFvqqjJfiaD+CF+2wKpl1iIfSQ3
mcMZJvN2/6od78BexSSkEGaiIX9frsGA/gX458D1tZEjDYbXNS7dltGGLoN8
qs9CveD86rFC8PEa0O6K3rZ40wc1p9kikixrQOCTVWHAUD9kVh2sLsLn9ybL
zDns7CD0bbYLTF6rgZIlw+fD1xcg3169yGfYCLhTuP5Kkhfg5LOm+cJHapBB
pu1LDlqEu9SjMKx6FZKk01uZxZaAjqmSxWzyNIhU2B+9MrgET/XzVO8ObmEG
B5+tyXuT4WwzddqprFyMur01pVwtCDAmriW1ZQYQuuzycG0qAXTv81dX6CjA
t1clNodGesEjiTm9S7EGiI38VFGX+qFXcP/7JHz972FlNeVzH4Du6JtOBY9q
oP6nirLMyCJYdWtf2JUvBqs+ib5Or5ZA+f2Fy4lfGCCqYpOz+zwZtN8MxuS2
jGAt87y5MkNksLb8QO9nJoENeg2+0eCxgv7UKdo3rrnYUZ7Aj86CkfD13d+N
RENBcNMo2NQ36IOCDY9BE5MaILRfO2Bc0A/H+7f5J/H9onJOxugL9iV4s9cq
V5/pHDBTqLUzfl+Cw9N/N5/q7ga/sKCGRksyXIrUDFfhrMCk6ht0TiS+Bla3
F//aTKjh1z9yn8qrj9AcS8WWMy8La4pyewIP9UNAtqlgPf58YAHk4t33BkDq
ncbHaIsaiF9Nihqxw8/vrpl3HQ7M4E7RP5jNQobDxwWzcg/NYKtPMU9CHRmk
vsP6spYJFn30pIdWhAeoSXyMNEqfxf7RF2bSJXyAO4IMNx2wK3BZxZ3CqagP
SH/40uptayDSL8own2oA9tKeHI6xr4HbL97dM1hegr+uy3r6Yb8xzNuEpz6a
DBjJt7iNKxb7ISUZ+4MYAndk0xJa1NihQP4IdZJRP/DKBSqY4/Mx7wW70cZV
MrxncSqd/diDZRgyDlWs4uc/W72V9mmnFNOB7sAvLNdhMGIh+3KdKEYZItbf
XxcGcdezrh8R5IalQScN1WvJIMKr0pjfogqPKFNvHbHKARP78oOh5pbw/YrN
8/2F+XAgTddWY80NLOqVXDbYvkGmnFTh3+sB4CsXUFDLXw7X1M77yFNEANco
TenYUhfon40uOa1TBXzjT987CPbA7goDShWrapDopb320p8IVyiiQ201CWDU
5O5ysIUEq8zxEpp/CHD2P03JMP4+uKGQSnVEpwZewCE7Ue9+wAwrwm/9bz2o
ei8lXzsAlWvPH+67XwNWklptfSeH4LlaSHHyTwL0Jr6wIz4aBv6gT5lX7xOg
pf+oKaY6AuPcmgHFwdWwvXHrpsX3GZBSP2YfGRIJtt9n3sg6zMK73LLNW+vB
4BBuy6bNPAc6h97I5Vf4g+yQ4BPbujn8PrHnvEfpAaNP+92OPp0Hzbx/5knc
9rCf+mnPMgM+n4ZvsNCsm8KFiAT6N5ULYPfT8noqmxZonvAlDhouQiOX36Ki
oyykOfOvee5egtH5SZEuWiFYazXbmsxZAovXbozNovuhADt3JPsuGTa6j7j9
5mjD1gqlV7ke+MBqEsuzV82/MeLjl+R9n+JAVOVRpePxqyD7zDLdTSsDkj51
7lpiMIC8Q78qNC/kQaNn6XLksj10d5ak2D0uhCnjrkMJD32AIfCUU0VgN9g6
bhULL1TBC/q13r6BHjhNL/ywcL4avrllnnvIRwL+4EaHyzkEkFv1nTR73gtd
yx8fNojWQELu3NUKUh9MVioWzOPX79lP/3F3cA/ALdKyXiZ+fe/68tnGym4Q
kvc/ebYtUANp8X6fbAlDkMw4dzHiEwHM93JePl43C8Jlrowx7wMhnl73wOqT
OTAc/JescswHLl/Tz7I5MQ/ksiMKQ4ddYSE06rBi9Tw8nDjx6YuNNciaTaUv
mi/APZU8oed7DcA/L0Gyin4Rzp7q5twSvgsOJ5sUXb4sApPeLc2Kucvwp4wn
d0xrCT6WvSMK+XOATtsPGncKMtxZNx8tOrCCcbGT6lMyyfC8r+tpIrzB0qkF
zpfFOMCizTXR7feN2ILbw0kbyWjQDBOZe9cnCqznf/4zbUkFTrdVTEDyAWiM
7BYqPt0LMV4qdJ3H8P1m/kksw7MPdhF+/SeIzxO134ZNnl39oGMhfv8+Pm82
vqUQH5wYBIvrN91jZfHzU8Rf8QQW4Hiq0qE5RWPQTUpIOTO3AIrBbidPTaiB
aVw6fdbrRShNke0T6LsKd2J4u/IElkCEi8v07wQP8Ct/8hIhLQEzX9+88eI/
zEJgl2WGGxmojy5P7h/5gr1/PNc+ZfIWNld+k1dqjoB+FnGz5W0CvKgjxar/
uAVXqA++Z+7uhTsaebkSt/Hn76wvN3oE+qGqJzHtJr4ebBrSPT9pPwBCycZR
N0xr4GXikp9c/yLkc7w8+dvyAsSNngqg91kCrzMjwn4dRyFEWSyo8SwZYnwn
PVVsxjASbQ53IokMJhG+3DTBstjBDOq4VQ4z2Lx98EojRyLmSC0/wuPxDgLF
+LRWxvmBSlzqSty9PtB9crg1y7gG5lgvcT7I6gdN87uVt/Dj2djPN8XKsgSG
ejL3FCX4gD7otfRBwhLUxfkfi4vdA8EFjMBvSoZnvuHl6wVVWH0w47i3/iuw
U2pz8by5F3hsFF14RT+CQ8jJru7MG/BCoPVa4+5+4JlgfXoa/35C/Cba/ioM
wFhBecMSvp7fVj4d6/JkCTi+N72zrmUBpyB6xeSjZMihrjfJEZjDtsKrf3NX
kSGg3piekc4G4xl6vLdS7QW81m8/3h85gRn8spkr+RkDjYq87INmkkAQoZL+
+gn/fNxe5Ch8/1TWHuiUsdkPodtKmAu+v7p+uLVWc2EJKCrVRhiurWE3Uxai
z4aTwejhErksIwErSNDV4xYPASPSjKuT43HAzkXeHNXqh3z6e39U8PmYdVij
c/kKvh4fEkrdy9iLffGJVjlJJsNiQquER9CaVPtCqac+jw68OcVWOxr9AhP7
dOrWzch+kMofb5jBz2/iOsfZRW0yCFzS+efYXI+NcGfOqw75QkLj5ehHn/5h
IeSBqhtL+Hpt4RqYiT9vWeR68IXsJ8O0cJ8pG2kJo+trHp4swL/vVze7J4Jf
YC5jlGycia7wjlFq2P9oL0Zt5JwQMdMPz7+cEaPG90dac7+9Zv3x+29TwO9r
aSYmY5Ex8fpXEIR7js+y3WQCpfnk2gfX+8Hmd/rJH/jxxQvVfB4SIcOP1H+1
GkFDWM33pMtj42R4KX9B60LkGYwooIVpR9iAOO198a3j37BYP6XfVhX9sBJa
GmKN7yfcbA9oPH5KBk713IW4+GIsb9u97+tEAFBfJ9A8bD+A71sqCcos/RDl
bGuvhf/+3N3/aI2aycDCoLDwOl8HO3S7Z3OZ6AnW/MXPGZ+RMTGDsc8m8WSI
lDHrGaKKxATMXtU/etIPF/1UZKzx7yP+apCZ3joZv/8i98Q/D5WaztYwGGYR
g1DDDwy/mndjortDXPKsw4C67vDMzOVTsCExuvGRNRk82UvMZYxUIXB2QY5f
Ngc6W1pKS/dYwuERHn6Tj/nw9el9m+UEN1i6Mtr5nfobHJH/sseaNgBKLD7D
BFM5NFsfrArrC4dvDMKt47Nd8IqSzd1LqwpyK92dD5zrAYWyts+nzfHno4W2
147eRFgaclB3VycA9+szb4PrSeAaE6Jx7hcBLHjZ+kTO9MG6oXgzzcMaoJ/w
cxNw7wfTG9/fa+Gfz4Fhg4FUMQACOVvFLA9q4Er5kyO1bENQvTL/6AP+98/1
5UkP6A/D2102t3Y9JMCiAmf+K+UR0OitzX8RXg2/U30sCmtnQKx6PcIhJxJC
6Nxnyp/OguI2Rlt1OAQChDe04xjnoJvCWsVyxh/YVWXtqwhzQOU7+16J0wNG
PBW/hVjPwz9BL9nXivZAYUn8c+nIAhi3zjpJSpiBSriB2e7yBbiMrS0NGmmB
xK+un3r6i6Cfe+BSWp0suKVarLdSLMFVEzceHX0h+PVu7wX9T0uQZs/f4ba2
H761WtweUiLDcJrfwDn+dqyM7VGBxjdvqLxqN8s4sopRD44HDqnHQXRrcX1Y
uDSoEruVmoUyIGbDofBjrT7IUjJLPzqZB5fZ2nToPtsDm6Otert6IagKWTW7
nfOBrIpbryr9u2Fs6vCZ5ekqoFreXfSE2AOr4v8p7J+phsBgq6dKPCRI/Be1
UJZFAJovgutLjr0wI/5w5H89Yooze1Snsw+MFR+0WePr8be7YoLNHAOgbHdf
RuQpvn/afURuy2oQ+ArJDe+E8O/rdNzSw/IhECug1dzA1/dXtwvCwwizcD9c
c0iPEAgF2dO3xS3nwOCqZtQDSR84WuSYV8k6D/mep1I9ruPrccIBhcYK/HmN
/6ybTJg1XGm51XjBdAFYN/uERcUNIOWzQbDE4UV4Jl0bomN2FzT+sphv5S5C
7Oal95cfXoGmhUd5gveWIL9JfMznLCc8iAy4ur61BP/dsObfW7GC8eSw7iam
kaGQpJRGnxaEiXU4fT79wB5OfaGWDJOvw9h/fPOWG4+C/OztsxMnROGM34Pk
wuRUCH4YJ2ZUdB+OxWVel+bshQNZu/gWGfH9yenJQbnnfRA28rHQ6jF+vqKH
ep639sN2T7lvMj7vXQ5QZc8dGwQXNcbu1Zs1EHsieLTwygK4jd778NnHGJ4l
Gmx9mF6AOY+w7Y+n1OGm4x8BQf9FaJP57mfOLgPcDWY9//iWQI+79e+wyRk4
yyxf/Kl7CU7UOMZ/dKcA6/JrqX2uZJj1sku9m/gV02ujC2OtC4TG5NslBeWH
Yd3opYKkUQIQKBpCwqVuwWbtl5wPrb0w6/tldFy+BpLYHCftePuhz+J0Cj0+
/wKpX/myWQ+Ax8na5H1mNWDseiW5kbQImX8+jX9qugB2dEaBup5LYGpOQdZ+
xAhvmdvqZHnIoBRxzSpUcRwbiF3W6ezG14fjoRFnvipip6RiU6tjHkH5uQ80
w3PvsTTnFPct3ndAXLcKaM/lg1upFANSKn2gJBabV29UA8/Kv5zTSO2HbLYL
M4748bRJPJ4xYVoCDUnH8PgmPqDTPOPkW7kErccjhkqu7YWIm5rO2sZkUJNR
emPNTsACf0smF+H7amIU88pE+24o5938HrbvI9SJ/SVwH74BhNiQcbPtPpBK
GfJtxtcH7vO6/as3B+DL0yNqoVY1+L7LOL7OYgno66TeMjxlBXvNbG9OejIE
Vjx4Fn17HqM8QyWsXk4G/nPjzK4P7DCSD9fbWRN3uPdNr1ZLfQwLfdTqHxoT
A3L0pyNofC8BdeL3YdW0Phi98IFi0xp/3nSg8Ur+0w/no0PUx/H1+CrJfLtz
dgmEhWkfHjn1F1MQF+zWDCFDd3lYs21uEsaibnu1bCoY6LfmZLRYWcEz+sG0
uxo+/zfn6qTx+ZhOWt5vKUmGPX1EKYJeH1bENBhwd4EM7iLEEwzFVBgFw2zo
Pw4tcI2X+cyIPcXq7saqyYT2g5ic/QQV/vfTXhsYnLiP3w/PfeI++TZgKf5t
n3ylfKHtjn+KwM0trEc33mBipg/GYqbPyODrsanTCUNaavzzEz5d/e/gD+zo
48OsTPlkoFE9x7INXhhVlmK8r74L/MqiszhO7MbeU69mBY/3w71+9fsG+PnW
cb1UxuJLBi+bzQt2ttlYMntpzenkIPz9E2O6mRgh5IHZo3WsH+r2Jr9uwr//
mDW9WS0hMoQQLZ22941gDfen7elHyfCQMsDp7FVhzHAtsapazRo06l1Tzy/l
Y8Lnv1OYF/eDCcG4IgtfX712KwW9tyZD2MbNW7HDpZiTYXLM7LUAYI+5xiHN
sB/yB72NyAz98COMbhcD/vvksY2bYQ1kKKCeN+Xcb4h15WyUnRb3BIZP3qcy
nBewSz+5F959IMPgwbbfAz+jMdteRdO95v1g94736RP8fCZ3dCQG/SHDksWY
rlRSkdR/ZW4WjjxKoM10l6MoQxlbjA41k/DvB8ut6w3i+O+feBMe6JBNBuPl
yQOzQf4YO4ynaQw5Qi3Dqo6IeBtm8qFMxMWDDHNyt7W/SORhbFd+JIuL4ftn
eH7HCT8/nc8s5mz7yfBBnNrYtVEaW2V6GnE68TF4P6q+L2uRjt1zKGPU+9wP
sHicxPK//rLHo2SVQIZ6ue7pz/ctMD1n2Wtvfr2ARZH6p+k005gMY4be2jsy
2BdRpBQ0xmPr/3Wlyuj2A00dY4sefrzZq/eYl5fJcPES++mYwmmpu4bfi/Qj
9MGpRZhjXv0VlkCdDgof8P0mvfFiLf5+++VfJ3/9jwx8dIa3vR88w5aYi94V
TTwDKpUbf0ziBrD9rmM8pfL94HTQ8SEd/voVEga78qbw979AGcO/zY4pGB/6
tkq0hcgs60VrmgpsqsKhU7QNvz9o7L3d7DQxofY4R/FEMpyrnXh0WTMcm1ur
PVtv1w+Hy+2/WeCvF5OrKCi0RYYkzvBkbS9VqR1f43af63NP5cqVHV9z7fVR
X1pFK+Rr3pYya9zTfYt8DTXnhkOGRzzyNa3cdLQKhpnI1+h4M++PTsxHvkZm
Io6nrqsY+RrlFg+XDdoq5GtUlMfmvC7VIl+TfbPYwJy5AfmaoAvqVAVnW5Cv
MVA9duDQUBvyNfcX7ndsuHQgX2PwOX7fNE0X8jXxnYUDp+S7ka/ZdcwqxNWw
B/ka9bl6J3ox4v/5mk2q09KFRORrWhR7U6r/EZGvqXxi0VhNSUK+xnRIM3W6
koh8jZTOFyrGq0Tka6IJWCpnaA/yNRR5535mf+xGvkZObzn2v7Au5GtY2QYb
nc07ka9hlzSTe7+vA/ma5GH6sospbcjXkFp2L0oItCBf80KreOjmoUbka6zM
365HnqpHvkbkoplr3L4a5GtCHr9nKbhUhXyNEPu/UF3xcuRrRIbua3jP/Id8
jZyKXqfgw6/I17AtJC5vLuUiX0O6+UZAOCID+ZoQN22BOdMk5GuUF1879AZ/
QL7G8+KTQw/2hSNf06NBfYMi8DXyNTomZ7j6tl4gX5Ppci/p/PZT5Gu6NE5w
jm8aIl+z9jg+nNxzF/kaJw6RiPvxl5Cv8bSbFr3Ezoh8zcGTxYe5Y/qRr5ny
ieDgN+y7tONr5H8qs82TlWDH1/jKTn4bi/RAviZwiU5DMPMd8jXvSboFW9nJ
EH9ad6T8bTuQUjtKb+Z2QYzN6E3b4Q7Yn+y7PTnUDW/pNFudL3XB70thYQ5d
PcjXfLl+/onucyLyNYfeNRq/nSAiX5Py0JlujZqEfE1W6J7KjTki8jVZxPPZ
N/yJyNfoHjD9futHD/I1aiWZdcOcPcjXfLU77HWIsxv5mZdeWkfs7T8iP5Nt
6Zbz/kgU8jOxjIOyYmeCkZ9Zf89+NInkg/zMuPzb5Lr7LsjP/D4TuH+j3gL5
mVyG/RVFGg+Qn4n2oOVo55dFfmZjqusGzS1e5GfW7/ccO+y3hfzMdotatqdN
DPIzgyTNnIfSgrDjZyJ2F939JOyE/Ey5C6dVgXso8jOzR7olnlIlgqSo1rQY
tMOD1rCmUp0u2IPx0HL7dcA4VaflyYhuOL96T5Yw3gkyldX0nLE9yM+sLgXK
JN8nIj8T8fDuIH8bEfmZl3fDiEpUJORnJJhK2I/8JSI/c99KwCwklYj8TAjJ
NvoGKxH5GcrwIvWsBz3Iz0hHTs6eNOhGPub0rqNiV6cSkI9Zd1Htq5Z5j3zM
UI166jhVKPIxFIlX7h5454d8jNzb5TuzFG7Ix6jIsJ83p7ZBPobiQkZr7wc9
5GPeR5+3vXZfAfmYEsGs1F13RJCPkbD8tvfAJA3yMSK/l4s3iyuRj6m5kDKv
ekkf+Zjc/sV2Xho/EEuO8ay42AnsFRQLOqd6YPmcpqbg2y64zjI8YEdFRB7m
Rc3CJSyGiDzMlf0bBPNVIvIwltusnbX7SMjDmDeb7A0lEZGH0Ww58u+oCRF5
mLpoUpt4dQ/yLtwXmdd+bUUg76LNy1qwvzUQeZezimIU08peyLsolr62rtjr
iLzLuWjH2nVWU+RddBm3dvlLaiDvUiafcluB+iryLtp+l/1PV3Mi7/JTJeqS
WfAS8i6Hhlxcmge1kXdxoXgspWNKBzve5cYfBt6LFk+RdxHwZz/273Uw8i6B
e4v0HMo/wj7JHnMyUzv8Wf2c8U2sCySS6snPtDuAT4bB96w1vv5MET1mizoh
rbhqQMOjB3mXfgn2op6bRORdxIz6p24SiMi7rPdtzfnsJiHvYrh3d57jNhF5
F8kfBG6pr0TkXWb2+s8yCBCRdxmxMMI6HXuQd9FjiKmT9OxGniVEd/czzeRE
5Fks/ok1vnoUgzyL73X35+uUYciz8GEFtRoHXiHP8poclOPx0x15lvQPUizV
TrbIs7RQ5j64BQbIs5xyl1CzHbyDPEuVgeTv0LILyLO8MNUKyc44jDxLR0dJ
grRSG/Isn1bEa9oOaCLPMtR0NT/xizeYHgBjlgOdoOjY8y9rVw9InyCFqhl1
wah30d1dSz3Ir/QLSuvdekNEfqXBKfQ/2kUi8itD1tRX+vB5v+NXwl+/alQe
IyK/UrDMEZzmRER+5Ub3FNOpvh7kU2ZONeRz7IlEPkW06HG32bUg5FM0NKoN
6AK9kU9RvuAcfT/FCfmUkuCFGzq65sinKLM2BbzO1UQ+hYrnBg/meg35FMr6
X8l1+dzIpxyySZA5FPAL+ZSu8DeJu7g8kU9Jzbe3i39+FXZ8SmnERrG+3XOg
9ss836jdDT+qXsY/tyBCQbXVy8yUHlDcd/wquY8IlJdvUTasEYG96+ZVDvz8
7PiVTxOGvcErRORRcn1KPA5pPUEepX46VZtZUAd5lMAwl9QYTnnkUV7MbEzY
hgggj1KbEEzTVbkbdjyKcCQW5Xr5M/IoZtqLmJaKCRz4uUKgUyNC/N/351LX
ieA9Mj0bH00CKp+JlbK9JORTbC9fDCY0E5E/WR8d2TMaL4X8Cc/iG2HhJlbk
TxyL5S1E/kwgf3JQlEBtefQE8iffPpPlHj0jI3+SF6a2fuWSDfInVCnC+iPR
QcifsLDY3XjE8RGsSsOymijboT6qtsScowtUiCz66bIdMENsflGHn/ek4Xcc
zxI74Thfr/5r2x7kT1Zf1soyYETkT2w9evVnSonIn/x+8piCsIuE/Am1vA9v
JQUJ+ZOV8srgvGIi8icvpi9fyxYnIn+yrnRUK9ynB/kT6eHxJJqQbuRLqiLy
BoKpkpAvsTp8/In0RgzyJd6hh05yeochX1JH+0hooOEV8iUZx6QfWbu8QL7k
m/zi8yaJp8iXuEV91vdgNUS+ZO729bSxQWXkS/YfeyWYFi+OfIlGVddibiM9
8iVJfLK+xqbdyJesK1R/3eerCju+pC7cbL6b3Qs8saCeG786YJeyIoXFj24w
ZYoUnlbqAudFuXqd0R7kSfxevKh76kNEnuSW+mjlygwReZKlzrjZfTQk5EnO
tqVX1k8RkSdxjnI9xuRBRJ4kVs7m1Z3JHuRFjJbDnq34RyIv4mZrm6icH4S8
SOSJvdJpwj7IiwSo9TvTuTkjLyISJxNn8/Yx8iJXfLp0n21pIS+y/0+h0nrj
deRFstZ+9m3P8iAvMlSaV5+s9Bd5ESvjqGzmkiDkRRK+s4vE3ZeAHS9yiIMm
w6/aBcxV5Bxa5fD9wdNqqVxDIjRKxW5vB/VA3t6f2nndRFB5qXH6f/vmsn/V
hzTw/cGOJ3kwOW+3+ouIfMiHitulP+9ZIx8SdldvrjRbF/mQaKmvh13ybyEf
srn98pdpuRDyIf7eelKqWVSw40Pkr6tdWeL6D/kQ28vWY/q8RsBpySVliN83
cbs1d336Q4QuvtWDj16SAPuqojuK7xd3vIjyzYNlip1E5EEcLJQTTRoAeZCl
TiKRvJcdeRC2tS3zbKtZ5EEeFHMJxKjLIA9yq2EywiHuJPxge/KYpQSfS4f0
3WnwedSvuZLZu6cXrLYz3k9vEJH/IL7kpD/4VxT5D/n3HoW7bGiR/2ByzTi1
rV6P/MdF5kd7tPY+hNv6Huf3MxDhlkyNzsgPIthVHVT98ZAEbV+/n32Cz+cd
7/Hd7YqWQxoX8h6Rs5lFgeIryHswva7r+f7GBnkPN/mX4lzlNyGPLDW8h5YE
+YIfAzLw19vxHP65n9RSOXfBjuewLY17LpWXgv12qlYoMSPC0r6TWlpbRBAL
76/tzyaBrK9uvu4eEvIchI0v+V3HR//Pc9wbHqEQGkSe4wzPG/Wol63Ic7RP
dNl28VkjzzGawlTgyx2EPIcvi7eqVFs8nPz3VLF4rQ0+MNur5xztgmHrqqjy
yx3QJSW4taXSDRIDjlY1kZ1wTix418HHPchzNP2SfsV6iYg8BzNTwv0P34jI
c5x1253YiM/THc8RX+Wv2YjP2x3PEeOwwdddRkSeo+GCMpvpFSLyHAX9DiP6
AT3Ic5Ci9nmPRnUjr/H3njdXtHgS8ho6LxufKMt+QF6DyFZQ6VIThrxGusK5
1b98r5HXIOzuD2oufoG8hjXdi4m26KfIa9BtKQ43vDJEXoP2esrKWa27yGtg
th8NSmIkkNeg8SVlRi4xIK8RqFJb0q5NQl6jJOStSpH1XdjxGpyDdyy2tTyB
jiRBpz3XAW6Gxu8/T3fDJr3TC6HrXSBS4qL/E98f7fiMHr5OFRt8Pu74jKPV
1icb8Pm54zMoTKJz/jdfd3zGZ/KNiTl8/u74jKrekeQL+Hze8RlzItbqnXM9
yF8csnnPF9AcifwFvX5HsudiEPIXbAUXlP7z9kH+wrmZE2uYd0b+gl+NfGwv
nwXyF99YbA69SbuP/IWOnbzwA5cbyF90bub5vjp6FvkLPb0JrpUHG8hfHBzi
pxfbHYH8RcqN6zRGFaKw4y/6xjj5Chyc4X1hRHQ71g2HWZ/YiugSoWf967ez
L/H96bULn9c68OeAzIECG3wfFs8eeKEPn187PoMGq339Gp9vO95Cm3D9eUCO
NfIW1F656jWX9JC3GDC6M83icxt5i8NTzV/+eAkjb/FOZtQ0EqOGHW+h03nU
dnitFHmLcRqDyQsZBsB3TvJvgCgRmuQop4/+JsKzuy6xcs9IYOea/u0BPv93
/MW4J3FsDV8fdnzF+5PyFkt20shXLGbFZdKVciBfUeJjO5o5O498RcalP9vl
P5WRr0huuPXvmwczRMr82tz4TASSi7bbHXy+aPdc7R7/S4LfMRcdJfD5s+Mp
rNq9nO+QxJCn4ClbvtZ6jw55is9v7hvkQxPyFJOS6l4HXe6DBnvUrCg1/hw7
rshIQSYC20zIRIcq/j5yy9pZ/5uH/99PxFuofo9PP4X8xGqf5MOwrp/IT1R1
urtcSXVGfsLNNvy71ovrcJ+RYD1NSYJQnt8fLfDX2/ERnGebnfRMKWHHRzy6
12n7mSMLo7jYTz2lQ4QfhHig2STCwDd9zbIkfJ87Yz3PhK8vOz4iknYqf/73
GPIRIpPPLeKeUGI7PiL8Efe0Wu4umHmzi7PyAxE48g5VZeHHseMjvCy6o+59
68DMReP2RQIJ1uBz5f/++9eOh5ikZaKi1f2DPMSeXfkHfyz6IQ8xb/Cs6pGV
FGTotYVmLRGh9VrDoyr8etjxEGw/hEtgJh/jp7Jy9Qoigf++lpp7+PW84x+8
FK9Lu7FPI/8wUkH18EGhMPIPxc8ou5dXz4Dcn5nei7VEKFpWW/6Cf/4d/yA9
kHDvHpGANcW8rKQ1JcFK6q4kLvz4d7zDkLi7SDyDCba/oVCR6xgJKtTO7O3F
f77jHd45/qa9cywB2/ENHsamZTzYB+QbpNZ/kJkDcpBvuE7pLKWq/AT5hsm0
U786O98i31B+8gn9aFo8rMeNf8j72QYrEskNCnRdkFLKVHDrYgfYnh3/R6/U
DZ5904zmoZ3gwmE/f8OkB/mGtvTtx5EXicg3KDqn7F0uIiLfcLT+V6Q8vj7t
+Iasr7Pf5fHvc8c3fOs4aqVXQUS+YdVwVrAC3xft+AaZH4TNqrc9yDccbNR+
9f1DN/IL6reOC15STkJ+gd8xoXWvxQfkFw793HP+/lQY8gsaGlObw9qvkV8g
7KEcLh14gfzCy4nv9GpNT5Ff6E6mmIqpNkR+oTvlcGXxu7vIL1AHv6aPPHEJ
+YV+g2W1Ju+jyC88Kxsx6FrpRX7h6dbuJ4nWyrDjF1Yk3erW1jygh/sN3/RE
B9DMm/1UHO8G2SMzZ7qxLnhl4nGmkNiDvAJm2qpk7k5EXoH14Ol9OZNE5BWC
Wd427cLXpx2vYP18zPXXLBF5Bc9rFu/Bl4i8Ar3XXHTQYg/yCH7MDwR9yJHI
I8jYrbve3h+MPML+uynmodk+yCPEuvu84DzlgjzC5ly57RdnC+QRjPQa98C/
+8gjxNMfiqfvvIE8QuvPwqjpT2eRR4hp3R48arWJPAKrCWUYDUMU8gj3LvId
3/VRGHY8wlym85R4pxOIzZVmdVzqhmfqv2sXtYnwoLcysvRFD/xgeXAwvJ0I
LWVx/wzwOc8kbeAYgd/PO17Bdlj0pfIaEfmD0c6jQR391sgfbFcKBUY91kP+
wO6l0is28m3kD4wk/S5kzggjf2DRpbJ2lY4G+QMhabpS4bsVyB8Ib/V8Wifr
Qy61LPGkABGSeLiOyeDPH8pGUtOXHEnwKt1fMBSfRzseQSTm51E5IhF5g8M5
G/Rny6SRN6jXMr79+Q4n8gYZ9fepO8UXkTf4ROa3z7+rgbzB/BM+obEBBrBQ
L7qxmIU/f9zgT13YTYIT4bOzpqskUNl3Wr4PX592fIFfOqPj21sXkC9w2veg
pZf3MPIF79Ip5sR0W5Av8MptiL4FWtC/mVRXT0kEv4lhXhp8zv5YVz9PUCLB
tpixeA0+z3Y8weOt80M/znMjT7D+n1TvctYq8gRXJrUerH5wQ56g2++9qeMf
GRA46/sfCT/O6LCYkZv46+14AQ/XE8a99LthxwtcYTQZjuLPwV4enZ5y0SLC
xYQqu/v4801uM/fHnDgSSMZadlvg83nHCwxPJG/fXhlHXuDcZLRUK90R5AUW
zfeLXgtfw0riCaZ5kfh+h85HTRKfZztewCeRSNFH3YVhsgbK/pIkeNmXeJUS
vx93fIBeQmyamOoa8gEWrbLnaP4EIB8w27BArdUtCW5PQwc+4PetHNOXc4H4
9bDjA9IiGT33/SzAKFiECXav/7cPpXGJxa/nHQ/wtTPA/sHVGeQBIi1F9I/P
XUIeQGnZj8okkxvY9mdxna0kwnHCvgw9/PPveIAH7tc/1PrXYvE58vv/GZCg
6YBI2y38/O70/6tzShWCcRbY0IBLBAM9CX9unyuoxn++0/917pUTh24nYTu9
v/ZeDG/LsyrU+zltrqa1F41iU49nRh8LkeCpN/t/NPj52en9FUuH+05KhWI8
USxWL4bx66fQj54V//w7vf+oyE+LROdibKfvx54TDuuXlEd9/97Xm4+eJ5wA
ue7W96Oa+D7vr8Snt/jx7fT9B/UeNCJ37bGXlLvO/sZf1y6mxecN/vOdvu8v
tHtaQjEd2+n5q9oGLHebllHPFzBlLSumo4YIzoGylOskEGm5Yz6P//2dnr82
eBfTVPPBehRpbxf/JILwulv1Cv4+O/3+OpsDqfb6GWzNv9qJzZIEqerfk/53
HDv9/tJjLaNAPQPsYuHqHmE2ElQyEx3n8Nff6flN4nb1HUfisZ1+33H5sNfU
jYeo3/ffSq2tmLXHdvp9zm7P3TleX1C/X0g6oDGRXY36veqTI37e95pQv7/r
52oqzdmB+v0Rl9KTYYw9qN/3fd1I22ffi/p9Topo1GF8nd7p958KtJono4dR
v98jb5Q5+GsE9fsrPHRFdXvHUL+v1/2vz7NrDPX7VdFGnu+246jfEzrK2ygW
x1G/N+CnVBMVnkD9XjO1olb31gTq9+yu+bKvRSdQv2cQ3/u8/9c46vfNTp3n
o/3HUb/f4/jOM5ViHPX7v/M0Kh1yY6jfr7coGoXajaJ+z33MoI09YgT1+/vf
M5V9Tgyjfi/juEiXdngQ9fuKRbN1iT99qN8r/utxycDnzk6/L6Kx7KEx60H9
PjYml/nmni7U7xOkLul15Lejft9zjHN9XLIV9fvL6TqSQeMNqN9PNZODYg7X
oX6vMC/Uuie4GvX7Iu2yZF3GCtTvDe4Y6IkpfkP9fmWCU4c2Mx/1++rN63k3
WHNRv8//E/ekLSAN9XsdCqHTzGkfUb+/7thOp70aifp9uOfHTA0sCPX73pXu
PemzXqjfLz3/4Cig5Ij6vTez6AAtvwnq908lAtg6wtRQv89ldN28h+/fd/q9
yp8Sqb5TzKjfRze+LTxgNYz6fbXUveyB6UHU7/+bOP4Qa0mEfI2NbcPv9fDO
p9BV2XsUfg5UKBeaNYJ4yiOjftsxKFhqOv9moRlUq50OcfOOw4UOvWQqmTag
e6PQrlgwjnq+/khpWujRCdTzK98xjVPh38tOz6fguqBfgP95p+eHCAVSPWGZ
QD1/ioW2Yo4wjnr+79eiPNflx1HPV1qcdmVOHwM42uhyzm4GNHP9IjbFs1Cf
3/xqdsd3IQn1earl3sEA4gfU53vcxJmI8mGozwfqizTHfPJHfX4l/4HdvWY3
1OfDErZMqIutUZ9v5bW2KPugi/p8CnbdQualPOrz186plUT+5Ud9HqwCpYeI
FLDT5+On3l8VPROP+nxSG+lZ489QkMxlcvc7Xg/sv578y8dGQaGi6oxZXQPk
37oeXiY1Bq6UN0ytFZtBnNUJE8Xvz6YLrbvMia3geNmE6Qx+H+z0etmyfWnn
KCdQrze7lcgjdGUC9fp0i4Lxf3ITqNfvefo0KvfMBOr10u6hxK9D46jXW01f
FXQzH0e9nul+wpt/3WNgYqf8BFOYgd+nJp2o+LNRf2dbThei/pyC+jvFPRYZ
M+l41N/XREu6El5FoP7u97v8rd1KAOrvE0a2OWGBHqi/DyxkLVZ1PkX93c+V
Sd9SyhD1d7eIY/sPaSij/j43sWZsS3EB9XctvkpSYjAt6u/m8yZ7bp8jYNF/
y5z3HmwCzlJX2hPJY7DSp/Yz/XULxOZTlqvfGQdvmj55zcg2OC+XvQWd40DF
bNx7a6QduuMLq4B7AvX5kHcHWsvw87nT54t+N94JkJpAfT7zha5/K/UE6vOU
TxbDfNPGUV+vGt63O1X1PerrnFLabG1CIaivG9Y8lgnOfIn6+gFmzxfYsAvq
6+qWbG9yNx6jvv4qfN8WOUsL9fUrOUTJK+HXUF/HSs0MSAKnUF83Tu8mRZov
o77up0Y0Y9bTQ3199hitXgaVN2xrc5dHE+qg7rR/VC7rKPz9fI1BxqEBjLrP
qrJzjYHOQY+9Y1tNcD7Tl/LL3Bg821Z/yOzRCj/a954b9h5Hvf3Nr8kjS3/G
UW8X6n29xCQ+gXr7HpbJMFp8/drp7cc/5mvOn59Avd3JNok3dm4c9fbGawGf
lV3GUW9XEfzoGjOP3y/coWZyEjMwZz7QVHg+B/Vz4+CC3u33qaifJwjI5/Qu
x6N+vrqHtuXOt3eon5/Uk9MuyQ5E/fxHrdxU2FdP1M8D7dw89LztUT+nc5Cu
PM5tjPo5y7GFqV4dFdTPz3r304r+kkD9fFKNFJC6nwH18yvXtV8de9OByc6D
8dC3Rhi9YpR5L2AMuiaCgo5faYFLWmHlYVfGYcDyg6OgZRsMHtSUP18zDp3s
Y9p7i9rB7KcsXSXbBOrrdB6jErWyE6ivvy872PXs6gTq65Ev6mzMj0ygvl6i
e03lQOE46uP5hrwbf4NiUB9fiurmsJIIRX28w9gzxoTbD/VxTfVnTjoNz1Af
x3jdn1QnWKE+XjRsPkTtr436uNhb+lPyZrKoj1v/F07b/PUM6uNOhkW8Y0Fr
qI83mBJ+vQz3xiz5BwxdTNqhpbyJqvDABLQRvc41fukAzvL2HnfpCRjaRdof
d6gLPnz3qxe/OYF6eZ3ZNY4BzgnUvzWrNGqCL9ui/i2UZHaz2kEf9W8drtgP
Fj8UUP/Wya4WE34pjPp3fLpUuV0AFerfgS79DnrhX7BLR2bUg6g74FDMNZXD
fBNAAetxJgadUPWyNXlZfgISJEhs+791wcljAQemJCZQ7xYaPHdlZu9V1Lsn
HYVzdFPYUe/mMHqxMToyjXp3atl99+/POFHvJlcO+J45bAd6onzDp6LqgF5X
dkGPehTazu3xz1ZsgOv6Fc00R8fgzhGOLtaeJrjWfHEhdxi/vgxYXpPVW4Ei
x4C86DqO+jd2Lv3Nm5Vx1L89Twy7YGITqH/n7S4VUMLv153+3Ra7p7hFaAL1
b03qEQWVH+Oof0voaKdReY7/3/9/ITThoRi+r/N5lv9IUWAG8kL82J/n5qCe
jV2lK8tkSEM9m4s1xE1H4SPq2VTLQ137NCJRz8YuVRa5hL5FPVtjUHX5j6IX
6tktW2kSjI8cUM9OhTV10qlHqGfHZx7LP2ininr28QuKkpGcl1HPVmPpmalz
YUQ9m1b7xqtBbRLGZkTRfyukEcipNIa57mNQMyugq3a0BXJnB3RWRMaBmtP9
0Pt7bTAgdJKfWIqv1wnxsWOJ7RDyneFyBfME6t0NrBH27jcmUO82Op4QIHRt
AvXuvhr5KHfGCdS7vVu/ZdOVjaNeLeLeN8Ui+gH16uu/alqnykNRr6bvP7d/
ecoP9WomXTHHnvrnqFfr6hDojHdbo16t/CGu/uxBHdSrMxUJ6kZLN1GvjtY/
zf0XO4d69azZf4+kBzZRry4rHeAMoQjFunKik++ptgP/u54eqn0TMLe/+/2f
Dx0wZZB70gabAKqNd2nCfztBdjz/iCi+nu70azuGY55a+Hq706OvrSXSp+95
inq017R1IZ+GAerRS5tvu5qrlVCPXj0VmvJBTBT16Mfn3B7zjtGgHj1m/KyM
HFKCxYelvLNcbYdTDFU1pfh+iNX29pEwhU64yPR31Bq/XxuEI7/FJHWBOet0
+53LE6g/R7A6J0jdkEH9mcdz/88s/pOoPwuUd9Jz/V1A/dlez/pSWeN1jN3G
0U3ZtgMILA7fSy5NgNrisQmNlk5o4GY6Hou/305vHpOR2Zycu4h6c30K/0+t
tsOoN/vrlA+QPzViSqTFnwucnTDFx6HQj887Zm7m35XOXeDQ9fbhe5hAfXlP
VczNrgenUV/WOe08FVK9ivqyypur1CPzT7GCJJH/Yr93QNJKh4G2zAQUUDNb
HuTugoOKwvyH8PVkpy/H/2gyHXi1G/VlkWe8kqe/p2NTB9IFLjt1wuq+g1eu
4vNhpyffkm3oOew6jnrygydCi7KvR1BP3pty4u+fo0YQFCvwxNSrDqb9tEtP
/xuByyYT1UaXGsD6ToDd0sExqGewuixe1QTfS/sNOPrGgIJx4+QD6VY4nnF3
S99xHPXlSgJXYRN5HPVl+yhHKBeZQH3ZrfvIoDZ+fKgv87UNCuM/3+nLR875
yLL9HEd9uWzockmXzzjqywFxi69tN8bg1dkbk3d4Z0A5V+DEg5Uc1Iu9f0Yc
pFNOQ73YwZ0i4ajLR9SL99AH8wwlRaJezJbcYl21Owj1YrrOCt5H771QL663
Wa9Q7XVAvXh/xB/n0ZRHqBcbd2u9W6NUQ734ZLW8K/O1K6gX3/qHCVLUM6Fe
zGuuXvblWz/mFz/CuMutEeoKFKJvO48BtvC81pqiBT6ytOYfFhgH9r/k3jaF
NliqPT/N/G0cFsfdoT2qHb/vSsxzmCZQT2Y04jX9jj/f7fTkAs36C3/x+bXT
kyX6vWieHZtAPfkw/0Ujz8px1IOTLELbqH0+oB4sQ6f15e2eMNSDxzaY1irl
/VEPpog5kql2yw31YH2TDSEPHWvUg6PSp39zdOqgHux9jdd5pVAO9WDTbZkT
v8P5UA+u/e7oqSH2D/VgmYtvy+P/RWK+y86ysvLtMGuPScfumQDHpOddtKH4
/cuRvaSB7/ej/zj+cVnq/H903Xk8lN/7OH5JQlJU2kQhVIhSqXC0iWwlSVGi
ogXZilKUpAVlT4t9zZIsyb4TQvaxrzODwYzKvv7OfH6v+9z3+4/vXz1Os933
mfu+zjnzPNcFlAQ3qYfA+IX58Gdl81ZOMTLy3uCf8jvt7toi7x1x1h+sKTdB
3rsp5Yy71ndt5L3ZH5cl/uSXQ95rsuZi7bmvq5D39hyemkrmLFQ63/xC3pBW
B96qHZZjg58Xs2pcLe5YA1g8aM8mCOPJVWkHTuqHRlDOb5pjC9eDmO96c1g9
Fxo+jnx3TVnY/BsJYeS72V/Z632qGch3j1udiF919LxSPNf2H6Zm9WDA2VzK
Cs5fBoem9oUWN4Des63J7fDzMM/tsdn7fGH4EPLcVWJcsVNUXuS5zcBo6yHe
WqV26wDJ5fwNYKbi9aQejF8J26dPrroH50fnRWu84XwO89sonqa+1c/FkN9a
spFV+T9NIr8VDmG7sLjtidIJpfY/aXn1oC9X5JodnO+eWTGdfWFzI7gq/6Qo
FsYvzG/N3X9tdlq2AvntLBXOu8eTlGyjzpmds2gAq4yf+wnB+IB5rb7eA6us
QAry2syyUgW+ATaltf0/avd9bQBhs2P5++HzMZ/dfI9r7KJ2k9JE5EDQXpYG
0G61f80u+PmYz+ZkP7WTiZ5FPpu0q+fLF00PJZvFH5cGlzcC1hs/D2fD/sA8
9kzJFxv94h9Kni3hLU8uwnjfkXL3B+xvzGP509luhF+gIY+VLt0V5L5RTqlg
7JD/6tYGsCxqpFEXPh/z15HntbauqT+VCpVOZTfvaQBfqUGK5+H1i/nrxa8L
JY5776D88spLjmHLPCOV9G1YJkWfN4CF699C9eD5Yv5qsG2zTqZPKPLXfZyp
Fs826gIJXZkfbxx+AoNTkWefz/YAqxe6vWBvJfCa/eJiyNkH2Pw33DuVUQWq
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
36p059qbn1NBe4jcXAO8vzHfZEl/E80ziPumCO3LkR+5uG+Wf3vikt47inwz
zaPddfT2KZRfayvrP8/sL6ze+heJrxY02L6tfbNHuS0abB/9kj8L+wvzzsod
zZo7Ug8h79z34IbEBwNe5J17L1Czf7+sQvm1q51rIhfg+2H11V0VTs6Ew3bh
6KX95mPxYA3/tH8ZPD/MPw+7r9pkySuG/DMiiH2j+t0J5J/rj0kkWbvaofxa
qhr1E/P4sXrqtwpeLK+Fbcw/C360XUjezYb8cz5O6Za+dxyqlx6auvzfFHz+
nQdsPUEnIoGlsZu1IWyj/NqY21mP+MnIQ2Wztj86ydGriOXT7msO3zkOn4/l
076Oep90BLaxfNo7SilvnGE8xOqjX5DVZB2D8RCrj65WbKNBh/EQq4+uLZcR
6F3HAC9I+7g0dIpAuitv2/EEuE7IbUm4zlIKXm+u4jCyZyB/7Tttruwjx0D+
KrnjqaQWiY78NVSZ0XwOjpOYf0avuecgQvmG/PPYQKOBbfgX5J/aw7JxD6+G
I/+MUMlWrWr8gPwzct9eVpdc3D/tLSSyy61d8frmP8YkJkrtkX+qPLmVdtnV
DPmnAb3D9l0O7p/SIW/HRRUUkX8GJ3KfEnfbiPxz2Xjtm/aADpQvW/33gjjz
+8byZQ2vJ8cUwjZW33xXPMeKI/B6xeqb6/QJPiXBeIjVN1+341fpEoyHkvIs
qjIROSDmQKkGL7wvaD3/yt+MFwCeeZm5mgIGuLB//NvauGJwZkVd4ZQvA2xi
r45afawM6Fl0PFfTZyAPrciMCS+dC0Yeyu134z7jH+6hWqdS1zmavkEeypij
RkV6OCMPLQw5Zy+z3Bp5qM7GHs3P00bIQ2vvfmu5+V4Neejdy89VnrlIIg+V
1VGgSW1mAZiHOqwPI2cUfED5sQkDZXRmf2H5sffvcmv3wTZWn1y9KjK/GvbX
39OiqTKT38DLqNaDWjAeanNs9AG86aDsOvvyQ3A9ifnobMLnrQmydshH2el+
wVxO15GP/ls/t7H27lnko2pmtuWmpbiPdnl46D7x4UY+qpa46ee2d4UoH1Y2
I4qfuf7C6o/7+pAG3WHb5teAjh85AVQmy1faw3hh1VRa89QOxsOfTp58cP2F
eel7vYiTc74nkJf+6mrOFCvCvVRs7tDacNMx5KUVqscafarPo3xYKedLi8z+
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
   "], {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt1Xe8j3UYBuBjZu89qmOTmZnMSkZ208hKU0Y0CA2b0E7ZWWVriKLMIiN7
hpBESPam61F/XJ/7fp7XOc7vfb/vOYkdujbvkjQhISEJlZL+l3f+36cY8ss7
5B1yuEwh17heTo42Z5VZZSH5ojzBm66XN0/Uc8tEWVT2k1f42vXS5vf1dPKa
+XbZxryDxuYK5kl6XllUFpdDZBK5zPWP9Ix6GllAdpKHeM61cTKHXR7Zm7OM
s39bprI/rNfVl1JOLyHfIrlrP5s/0bPoWWQPjvNG/Izx2bjMV+b3ZFr/7qr+
uL6dRnoROThupGtLRer4ufidZ8255aucYaz5D+7Xl1BWX01mvTvHeN18W/wM
XOJL8xVa69toqC8hVXx/DvKMOZfsxWnGmA9RR/+BMvoqMukv8Bevmb/gMq3M
W3lA/4Fb4ntygKfNo/md+8zfU1rvyzwu0dJuCw3070kZX8d+nop7zEHuNS+m
lN6HuVykhd1m6uuLSRFfx288af6YA9xjXkRJvTdzuMBjdpuop3dkFPupbfdd
nGf9VWZznkftNlJXfyLOF79Ry+5bSui9mMU5HrHbwP16Bz5kHzXtFsZ51Xsy
k7M8bPcLdfT2fMBeatgtoFjcS9rxPnuobv9NvDtxpihMIQpSgMQ4k3E2uJX8
5CNv3FfaxhnlV6r5PvPJE/eMNrzLbu6OdzLeVf0VZnCGh+zWUzvON++wi6px
/smlv8x0TvOg3Tpq6YtIHs+KfbQ2v81O7oozTE79JzLq3TjKS/FZ4sxzkc/N
p2iur6Vm3Ac5iBvxLOPeywzetWSyI3tpZT9WZrfPKYvInvIUI10rZR6p3yJ3
xD2UVcxfxO8Oc0XzZD2fLB7PXw6TyeSPrpeVH5szywyyoOwqj/Ci6xPi/tjl
j/eKC3wW91ymsf9Hb6avoUY8VzmQ63HezEnlE+yhpTmHfIV/GGHeTmV9XnxG
fSXp9S78SQ/zNE7S1Pwz1fWFJNE78CstzMPZRiXzXLLp3ZnK3zSxW021eK94
i61xj+zmkFV/gSmcoLHdKu6O94phbKGC3Wyy6N2YzHEa2f1E1XivGMpmytvN
inusZ4pzQob4nKQjLWlITao4V/GeMYRN3OlrZ8Yz1qvEeWYwGylnP4OUelcm
cYyGdj9SOc4zg9gQz9tuOin0LnzKXzxgt5JKcUYZyC+UibNLcr0zEzlKA7sV
VNQXJCTc/IPbnt00Mw5gPaXjvMR501fE59U7c5jnzflkX84zwXyE+vpyKugF
5QCuxe8Q8w3a6btoqmeXL3OS/uZ18U7o05Lc/LOVUEwOjW5Ybh6lZ9LTxv/P
H3SyHx/vsX1e2YdzjI/fFTK1/Z96PX0Z5eO+yTz2BWQx2V9eZX7cM/MHenp5
3Zwo25p30iSep3lMnE+ZTRaWL8m/6ed6SfOIeKZybfwekSXNU/kXpvsIOA==

       "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, 
    {RGBColor[0, 1, 0], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1mW4VAUUBVAejXR3txIqjSJIt4pKKKg0SJmAYtJhgAWSitgtLd0q3Snd
3R2u8/ljuc8+F9+buTHzCrbr1axn4kSJEiVwf9L/82v/KUU+B1bqyeX7sZP9
9dPmVymqZ5FZ5Dh5v3zE8W3mZymo39bTyk/0snK6ftM8gBJ6IZlLfinLObZI
1ueIOZX9SPNE8yX5BrnJbj9RdrM/JLuTmgz2o+Vi+8TmYfE7iPf3jSzNKvMA
zph7k5VH9e3yOe6YZ3DLPJDClNcXywYcNU/isvlN8sTv1w/LHqRhiZ6Eb81l
WG0eyGPs0Nsm/H/CZ4oKLDE35Jj5C3rgUiT6Ls4Za8yDaEZFlto14rj5S3qS
jO/t7mWteTCPU4lldo05YZ5Mr7im/GB3H+vMQ3iCyqTgx7ierDcP5UmqkDKu
C3eRmjRxfUlHejKQkZ/ierLBPIzmVGW5XRNOmr/iBTLxc5xnNpqH04IHWGHX
lFPmKbxIZn6xq8Am8wha8iB/2T3C6biPeYks/GpXkc3m92jFTr0dCczSq/F3
3A+ciXuGlzmi9yQtS/Ws/GauxBbz+5w19yEbT+m7ZPu495it35aDKMJD+j/y
Mc7GuXSDjjJ/a74i3yIvOewnyVfsj8pecT/apZMZ5Zi43nJZ3G9yuH63LBn3
pfwqzpHM5vjv5srk17fGNZYfxDMRqZ8z96WYnj2eCzlePu3Yv7IDSUhn/6n8
0/6OHByfA1TXV8pmnIt7l6vmt+NzJD4v9GPyBdKzXM/OH+YqbDN/SGt26x1J
yhy9BqvMj3M+7nN6k4OpdlXZbh5JGx5mtd0TXIj7nD7kZJrdA+wwj+IZapKL
6fYPstP8Ec9Si9zkIS/5yE8BClKIwhShKMUozgw/pxq7zB/zHLUpwcy4B/jX
/AltqcMauye5GM8ffSnJrDi/7DZ/SjvqstauOZfieeM17ma2XQ32mD+jPfVY
Z9eCy/G88Tr38Kfdw+w1j6YD9Vlv15Ir8bzRj1LMsavJPvMYOrJH70Qy5uoN
2GBuxdV4/niD0sy1q8V+8+d0Yq/emeTM0xuyMZ4lrsXzxpuUYZ5dbQ6Yx9KZ
fXoXUjBfb8SmuH+5Hvc/b3Fcf5EMrNDLMt9ch4PmcZw3vxbPX/xMfb/sSkoW
6I3ZbG7NjbiHuWZ+J56vuOf1E/KleE75S7+XBea6HDKP54L5dXLGz9cPyOdJ
xUI9vriGxDNJE3WLbMNNc2rHPjJPNV+X71IgXoN+Ur5MpuDffS7/tk9qHhGf
EdynL5T1OGxO6diH5gnmi7IfuchmPyFel/1B2Y1CdnfFcyw/k4scSzAPNZeU
xWVuOVmWl00d32p+Jl6jfktPIz/Wy8hp+g1zf4rrBeOcyC9kOfmu46fMr1BE
zywzy7HxPuQ/jieT7+n3yHtkXjlFVpT3O94l8f9/3/zhizmPrC9LyIkypTzv
eGn5g55FlpeF5HB5kd8cL6v/as4pa8ii8rP4ope74/fKKXo6WUDml73lXvo7
fp/+uzm3rC2Ly7EyqTzu+LfmjOZSsqDsL08y3rGfZXa7qnIk1/kn/m6Sqe3T
yHasorN9PTmBFI6d0783ZzaXk8O4wK/21eWn3OHf+M6Qaf27/PJV9vCufS35
OUkcOxbvNfacYJxeRX7INf7WU8u2rKSTfjbOv3ko5/lFf0h+wm126fnkK+zm
Hf0od8fMccbqleUHXOWvuA/lc3Eu6KififNsHsI5ftZ3ktf8crxH3taPxPdk
zByL96avIJX52XgPdNB/Ygd59JfidfKWfpgSMXOUMfpyUpqfiddGe/1HtpNb
f5GdvKkfiuckZo4wOr7HSWFuw4q4nvoPbCOX/gI7eCOeO5aSXG/N8jjfcZ3j
+52cei+20y++s1lCMv1plsV5079jCzn0nmzj9fh7ncUk1Z9iaZyXuEfZHH8j
6D3YymvxLLOIJHorlsR50PvG5xQLSWzXksXxHvXWPM1TtKIlLWjOkzzB4zTj
MR7lEfowigUk+FktWERTvTcjmU/8Ed6chTTRv2ET2fTubIl7PD73mMed+L12
C2hs/pqNZNW7sTnuT/0D5nI7XqPdfBqZT3OveTBnmaJvIIv5eTbFPagfpFhc
Rw7zvl4pkivM0W/FezfPo6G5rhxPcs/fqbhu5kzmsnIQZ/jKvozdL+Ycspos
Ij+Wt1gfz5M+2ZxGZpb5ZFe5Me7veP36b+ZcsqYsJsfIxPKA46XkN3oGWVQW
kP3kId6L50Vms6sYncv8af+FvMv+ZlxP81wamOvIcSRz7GS8fvNATjNZf1B+
xE3W6ZlkFzbE86Tvp0jcsxxkhD6bG3HPxLmkvvlL1pJR7xznIp4nfR+F4x7m
AMP1WVyP+y1eO/Xi9bOGDHqneC3xfOnDmMm1uDftZlPXPInVpNc7sjaeL30o
M7hKU7tZ1DH3YAjTuUIT+5nUNteiJg9Tg+o8RLU4PzxAdwYzjcs09v/OoKq5
G4OYyiUa2U+ninkiq0ind2BN3Kv6XgqZ+7I/ron+BxdpqE+jsvkEpc0DOMWE
eD1yFDdYqaeV7VlN13gfcjQJrvmeeM7M6c0FZR/2xc+z/1Fmta8gC8sR8hK/
O1ZSn2ROJS/oeWUDfSqV9P8AhosL0Q==
       
       "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
    {RGBColor[
      NCache[
       Rational[5, 9], 0.5555555555555556], 1, 
      NCache[
       Rational[5, 9], 0.5555555555555556]], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1: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
       
       "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
    {RGBColor[0.88, 1, 0.88], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1: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
3/9/d1/pBQ==
       "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
    {RGBColor[1, 0.85, 0.85], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1: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
       
       "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
    {RGBColor[1, 
      NCache[
       Rational[5, 9], 0.5555555555555556], 
      NCache[
       Rational[5, 9], 0.5555555555555556]], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1: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
aS5bZ4zzI1vLafb5H7u980U=
       "]]]}, {}, {}, {}, {}, {}, {}, 
    {RGBColor[1, 0, 0], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[{{2957, 3572, 3571, 2643, 2456}}], 
       PolygonBox[{{3573, 3576, 3575, 2827, 2709, 2795, 3574}}]}]}, 
    {RGBColor[1, 0, 0], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[{{3571, 2577, 3574, 3573, 3084, 3572}}], 
       PolygonBox[CompressedData["
1:eJwV1mfczQUYBuBjZWRUtmTvnZWy91akgUoUJavQIFGyRyqV0EBGUfbem7L3
LLJChCJKquv5cP3u57nPOe/7Ov8lb/vuLbolTSQSSUiVPJG4kS6ROJU6kah5
ZyJxME0i0U++I7vJFAyhuv1ZeUO+KyfJN+RdDOcHny8h1+n7yi6ys0xKMXNr
eVW+IyfIV2U6/vG5JvKkbiSvmFPRyPy8vCWn0sd8D+O8P5OcoWtJJ3MiXjM/
Ji/KTzjtfbXsh8wD6G6+gxrmdvKmnMxW7ytpX2/uSnHa2H+Xn3Hb603tp8yj
aEyH+LvlNMZ7PbN9Zvx+MvK4/ZIcyxmv17Yfju+NmmzTldJtiO+YEjxl/0N+
zr9eb2Y/bX6PJkzQZdF9Gz+fTJzV1dEdMQ+kFtt1pXUb499MSf7TPaw7Yx5N
0/i36bLqvjM/QWZ+0dXVHTUPojY7dGV0m8wvU4pE/J36bPpZ5ifJwjndTu7X
b45jSWmS8IU+u362uRVZOa/bRVn9FnsPypCUL/U59HPi3CEbF3S7Kaf/3t6T
+0nGRP29+rlx/MjOr7o9lI/z096LsiRnkj6nfl589+Tgom4vk7nPa/N1T3Mv
l3T7+IopTGUa0/mab5jBTL7lO2YxmznMZR65/NwFft4z5OQ33X4q6LfGdUE5
UjBfn1u/0NyW+7isO0BF/Tb7a5TnDhbo8+gXxbVKLq7o6umOmQdTh4O6B3Tb
za9TgZQs1OfVL45rhNxc1dXX/WgeQl0O6SrpdpjfoGJ8T/ZrcZxJxSP2s/J9
mtHRfltOZ5HP57MvMbfnJXMS8sS5KH+Tn8bxMqeNa9H7G8ifdP3l0DgXZcqY
qRc/R/4V14H8SvaWdzMirj2ff1Du1L8le8suMhmDeSCOh7wuB8gv43uV6Ult
bi5/kR/EORodD5tfkP/Kr1nsd+S3LzU/R964LuyX5Tj+8HpD+3HzMOpzRPeQ
bpe5D5VIQwvdOflhfI8s8b4CumXm58nHNd1RKut329/kQe5kqb6gfrm5A/m5
rjtGFf0ee18eIi3L9IX0K+I4UYA/dT+ynMJeWxn/XgpyQ/cTK1jJKlazhrWs
Yz0b2EgRn1/lcy9SiJu641TV741jQmXSsUlfVL/a3InC/KU7QTX9Pns/qpCe
zfpi+jVxHlGEv3WNdCfMw2nAz7rquv1xDlGVDDyqOy/HxHFmi/cV1601d6Yo
rexX5Hhueb2x/WfzCBrG8bb/Ladw0us17AfMb9PVnJxq5rbyTzkxrjtzhnh+
mlvKC/F++ZHsKdMwjBbxvcn/5CD5TRxrmZGRcR+M719O9QzPzQd8l9b9Wabm
TZrbJ8ksDOUT+1j5u3xe3iknyxyM5Cv7ePmffEVWkRnkO8H8kfxRPiyP+N05
5Xt8rUsuX6OBOaMcxCjzedqY//T+z8w3ecleWKaV/ehi3sJD5pXxrDOnMvfh
EfPHXOU5e5r4m/mXl+2V5dsco5n9sM/XN4/kHK1113UTzDfoZC8kO7OZB+0r
4rqOfx9XaB/fYfw99OcoTXWH4p5jHsEvtNJd0xWMfxObqKRbrksVP5t+HKGJ
/mA86ykQfwcbeUC/LO5p8Vne4jCN9QfiHkh++4tsoKJ+afyfJj5LXw7RSL9f
f5V89hdYTwX9krh+4lwmr64j6yjvtcXx3IhnTTyf4tkXz8Z4nsYzOJ7b8ayP
6zXuaXGv9rkOrKVcnHNxX4l7N7njvGINZb32rS5F/M28yUEa6nfrL5Erjimr
uV8/M66Z+JvpwwEa6Hfp65qHc5YndRd198WxYhVldDN0zcxjuEw7XbK4BrhN
d3t52Zv91Lfv9Jnp5mTmV6ljvkcOZJj5DE+Yf/W+rNExXvdpnNNxXGRO+UVc
T7xFO/uHcS7L0vIbn50ic/F+/Dv1n8mU9KapfaLMzBA+tH8if5PPyqQyuxzB
RPM/dDOXk+nl27xh3kc98w6/b5o5qbkXtc1DOc3j9gteH2e+HueJ/d74Payg
VFzPXm9i/oBLtNUliWPK6+ylrm6799UyD+EUj+nO63LEZ1hOSd10XSKOMa+x
hzr6bfG8I7v9GZZRQj8t7nuUsb/Kbmrrt8bzmGz2p1lKcf1U3Q+cjWOke4ol
FPPalPh/AZOZxMR4zvMFn8c9Ke4NjI/vhE/j3soZsvgZbVhMUT9rrG4Lp8ms
a80iisS9VbeZU2SKewMLKey1j+P/C5S292IXtfSbdCfjnh7nNAsopP9Id5tS
9p7spKZ+Yzx/uCfOSeZTUD9G9w8l7T3YQQ39hngWcnccd+ZRIM4v3S1K2F9h
O9X163U1zYM5SUvd8XhWxbFlLvnjWRPPPYrbX2Yb1fTrdDXMg/iZR3U/xfMu
fhZzyBfXgK6x+X0uxrHX/RXHxXyLrvZicb2ylar2tV6vbh7ICVrEsyiOl/ka
He3p43cym7z20V6fYb4jrg8amUfza5w/9ptxHpj/pou9aFxX/EAV+5p4vpqT
mHtSzXy3fDeYj9PcfMz7xpr/oIM9nUwj+9LCPIs88ayMe1b8XXFP0KWQr9PQ
nEkOjveYL8Q5bL4R57oczue6cfE9yc6yiEwn+9PVPEZ+LyvL1XHOx3XNqLgG
9BNkgh5UtX8p72JAsH8cx0o+Io/6/E35P3tQNDc=
        "]]}]}, {}, {}, {}, {}, {}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1WW4VFUUBuBBOqVDRBoRpFsQFaRLGiRsLNLAFkGxQenuBukuRUFJURqV
blBSQVJ814/3WWt9Z86dO7P3PpP/6W7Nut6RSCSS0EnTL20ikS5dIvGH+lj6
ROKAfojaR+2jZmQcD5pfUROMYrK5n5qbSXzn/qrqRvkgtYvaS01PUf3L6jV1
hDpG/VzNyb/ua6+ekfXnY31W6unfUJMzQ/+Vmof+Xp9PnSNrxrv6NPE++ufU
v9Vh7PO6puaD+g+DPhPV9a+qSZiiX+N11fSb9F25j87m6+pYrrrewfxn/A/U
501zCmZG5np+/Vx9czLQyfyPOpz9rjczH9J/xEN8L3tQtlnfjWJ0Md9Qx3HN
9Y7mv/Rf0yCqrIBsnr4Fd3JA1lx2WN+Xh/lBVl22Rd+d4lyXDaCgfL65JRk5
KGshOxLfO4+wVvaQ7Gd9D+7nhmwgheQLzK3IxCHZOh6Wb439QQluygZRWL7Q
3JrMHJb9yCPyX2IdKMkt2WCKyBeZ25CFI7KfqCH/1fwapfhPNoR75YvNbcnK
Udl6hlLUtSWyx8nGMdkGhnGfa0tl7cjOcdlGhjOCkYxiNGMYyzjGM4GJTGIy
xfytZf5Ge3JwQraJKRR3bbmsAzk5KdtMTfk28+uU5rZsKvfLV5g7kotTsi08
Kt9u7kkZEkyTl5Cv1D/BXZyWtZQd1X9CDX6W1ZLtiPNEWZLEPbKz6gAaMt3r
SspW6Z8kN8+bL8eZ5YzrrczH9J9SM9bDfAdT9Vtdr63fGeeDD/QZKBfnSr2p
jucLfa64L95HPacOVQfG/6xmYzyNzG+pKRnNrDgD6j3x7Ilngvcrpa6WD1Sf
Ut9T0zKWu80vqFfiHKoj1c/UHHGW3dtaPR5ZnEt9Zh6NNVGTMk3/i9fV0e+K
/4XycV7Nt9QJJOUp83l1EI2Z6Z7Ssm/1T5OHv2RtZCf0n1OLX2V1Zbv1b1OB
ZMySl4nnqf4Z7uGsbBv15HvM71CR5HwjLytfo3+WvJyTbWc25Vz7XvYc+Tgv
28Ec5jKP+SxgIYtYzBKWUt79P7ivE/m5INvJMiq4tjb2CQW4KNtFffle87tU
IgXL5RXl62JdKMgl2W4ayH+L9aMyKVkhryT/Uf8ihfhbtoeG8t/N71OFVKyU
V5b/pH+Jwvwjays7GfuO2uyVNZL9oe/FA6SOtZJdUAfThFVeV0W2Xv8yReL/
iN8rdRSXXX/cfEr/JXX4TdZYti/2P1Xpbv5PnUiaWFPzRXUIj8Xam1PxjX61
+x/Qb9B3js+nT8e98ZnUq+pornhdO/NpfT/66rNQV99TTcZ0ff84B/FdeX0T
dX98PrW32lu9k2r6HuptdaQ6KT6PehcT4zzFvlIvqcPUoXH+1exMoGnsRzU1
Y5htHqDmZUqcg1iz+C2LvR5nKZ4R8TyKZ1o8B+PZHr8H8RsSvztsYXOcUzZx
ho3xvcR6xBrHvoi9FPsv9mfs8TgDcW7ie4n3jbWJ50OsfzzX4vyxMs49K1jO
Mo7FcyjOceyBWJ/4vCzlKEs4wmIWcZiFHGIBB5nPAebF98xc5sT3EfuBs7HG
se+YxUxmxNrEWsX+Z1qcG6byPzjZasI=
       "]]]}, {}, {}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{{0, 1}, {0., 1.0000000000000004`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.670961283285865*^9, 3.670961307061664*^9}, {
   3.670961547778977*^9, 3.670961553483768*^9}, 3.670961588121272*^9, 
   3.670962157855529*^9, {3.67096218914438*^9, 3.670962230012823*^9}, {
   3.670962369099587*^9, 3.670962399376567*^9}, 3.670962491627686*^9, {
   3.670962528735693*^9, 3.670962609993936*^9}, {3.670962677678957*^9, 
   3.670962686165195*^9}, 3.670962736694461*^9, {3.670962769129974*^9, 
   3.670962820468355*^9}, {3.6709628532136307`*^9, 3.670962860175932*^9}, 
   3.670962944033409*^9, {3.670962989550426*^9, 3.670963021164113*^9}, {
   3.6709631209779243`*^9, 3.670963185122457*^9}, 3.670963345480644*^9, 
   3.67096339974384*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
fRMU6aYYVY5a0mNjd9jzjEYijThfkfp78l4Gug/O4ai/N5c4vH2zXIP6+6SS
5QaD+X7MdDW1rl7LDgzDvp0vIc5XpB5/L/pbxIe9L1GPZzqvqtehroB6fC9T
q/W3XA/U36t2S1SGFj2Vffv+gbUL32XYMyFwAUd8P6Qej5/Q+BrHdQf1eDZJ
v6ZL36JQjxexyp7cWuLE/jA5xvKmWsHrnOwpBuLjSX1e0zeQTeCTKurzr+wH
rxkreaM+ny4aMPq0o0lWw7Sl3DjWGG4YvK55SXw8qdfrV5TceThugHr95eLa
qhviBNTr3Ue/syR/kES9PoG36fXiiDPq9Tnljv1cj0+hXv//7racR71+dlYj
rnOL3Otd6G9rNS+Re/32QAu/bcT5mtTrsaWLb1OIr4vU63V9pd5zuOFRr285
8bSxnwePen3ij9gxU+I8R+r1dxvWPlUcxqFeryQifvGJyxzq9Yc9uXeGZs+i
Xp9tMZP/rWsG9XqV6w4VkhPTqNcrVZ4Z+dY1hXo9f5nW8MK7SdTrtQ1avxR5
TqBeH3OqP16AeB0h9fobNWoix1ZGUa+nx6WdWoz9hXp973GeYF2VEdTrm3W4
FYZ+DKNeb5s02hLzZxD1+knWUvPtZt9Rr683UWiJz/mCer0t++moTvF+1OtP
cCj7Lwz2ol5fsYTdy3DoRr2+5shXiS9qnajXt21eWhfD2lCvF7VXkbZTaEa9
/oS6ukfb5wbU6/VDgyZoHGtRr98XwxV0SqQK9XoHYe3w9BPlqNe/bLrsvMew
GPV6leX86rWFPNTrqV27rFUrMlCvH7kuuvj5QArq9cX8Z1nX1xJQr7d5Glkv
tRKFev3ood4HXPJBqNe/aLl3vansIer1yl9Frg3uc0K9/nrH8xaOXbdRr6+e
2czQsdNBvf7aNjcJsXAF1OvrQpWlqFxPoF7/9hn77AILFZB6/YjX9/Ifim2o
179POXtc0LQV9fqU6s0zXwjkXn/HJOZE3Qa51ztO11f2zpJ7/T3nel/+T3jU
648YSPuFJxLnhaO8G23ulbD7KO357ZrE+Xsni2bmYA1MT6ud/0pcNz49EmAe
E1MPFxbE3N/exsGTWlmq7UKNkMQfHKfeNof6Pvul+4Pqwq9R3y/ylcgManyF
+r7UaLYtte5L1PclJw1bdr+LRX2fUvuQ0tfycNT3T58b67jE5of6vrSDUgIn
nzvq+1pbEW0Xq2xR32e3o5inMTRCfb/G1oBjt9Zl1PenB6XZ3uySRH2/y9Li
sFvzYdT3jcKoe4Yicajv94Rud/3eFIL6fpUZL8sGgdz3g89yPHr6l9z3Vc8f
Ua5dIPf9exHP5rmJ+wJS32/HewYNEvc96paqMUVn3sHrmSu86ubEfR/fuWcx
J2tAWu759sZdeCi4e+xA0WQd8HlQL7kG48Dref2uvJAPgHN43an+Zw55gOT5
z+l0VLnIAyKvmDDxSqYjDyhjVuVTHUhCHvDmiD5bQetT5AF6fabUMTcikQc8
zaR5mPXkMfIAKd8FVqOU+8gDijMUNU4+s0cewO8XXMDrZYo84J5C2SOGYE3k
AUbyei3lkxjygNO/ErmqvbmRB8SWxosWLa4jD+CsjanE9hQhD+jp/Bn+gED2
AAarD1Eia2QPUHp6h3KeeJ2Jr6Rrf6ZaDOYSV7O3fcDD9Fj7IdOEcrhJI78v
KxgP+7/8NZ6oqgLJbb9sxYj7GpIXMB0v8BFtjUFeYGzqkkY1HoK8YO9Kd/T2
Hh/kBTH4ufGZ5XvICwTH/oYoFtxBXnCNyyfVVOY68gJPy313Kh8pIy84F+Gg
u8tADHlB4AWRO0lp+4HkBRE39A8Vug4hL4j1Cb2qv0sNecFuPUUTwj9e8KPc
x1lpi+wFq7I/Lgwvkr2gr2kiSuI7HnnBmY9CxxaKiPPDnmEj3tgKOLe6fGzi
Lh4U7+Z6HSyoBv/HtD2BzHioPOQyVRNVBxSjQ9OZiThwCvYPfiTzAcK/XMkv
p8YhX0iSu/PLZS0X+QKGsyzjWklHvnDZNt9G3CkZ+YJgTV+45mA88gXVRir9
S8eikC98Zl0yoRwLQL4g4++q/OyBF/KFrw0LHAUdDsgX0iLOGoScNkO+wJ6d
5OhsrYV8YcU3b1DASh75Ag+nVGmzzDHkC3K3Mq4ymm0Dki84f/xYmp9Wg3zh
If1YzhsC2Rf6a5kfR62TfeGttLIf5TRx/r3G3UidWwRGA3e0pYnruGMUHmHK
c2Vwbtxt+UoM8Xt9P1JYn60KMtZeVly6gEf+QODwl+t9/wT5g+bA/ffxKmHI
H9Tv73z8YeER8odlk0EBbj9X5A+bbOEvs7KskT88S9tZ+mX0BvIHPjuhq/RX
LiF/aD4jULy6VwL5w3mzERmhHweB5A9RTb3+Xtg48ocjvxgrBC45IH+QNbwU
gieQ/UHh0bW1OuJ6uJXWmyOyLhMWH+0dtcAT13lRmuVDNoUA38p6W3vIPsF+
o3Vk6acx8om+nxK6la3qyCfUWX8kVatLI5/Ycr+h0iXDiXzCgC8l44/3H+QT
6f2y9Iz3k5FPHC/siD9FfH3tetXsl56kwgnODtzTFbJXxFoFpKwOnERe0XhW
WH6IczeQvKI8vWJu0r8PecXUmYaESwJ7MJJXfIuSmiX84xX622nqw7fIXiGq
ULPj2x+yV5y+Mc3DM4hHXrF/smNJuxQPFkPHmwwVK0BbNFI03Im4Tqc49ypY
rxrovkncB3Y8nJt7odV8uw4WVmx2HEzDgS2lhaot4wfopvrpprQfh3xjq6Q1
5qBzHvKN84RwX1G9DOQbMy/1OkPrk5FvxDy2pOCxSkC+0T5CvM6GRSHfGJZ+
/tiZuB8n+YZ/+/ND0lIPkW+oMnOqzNg4It9goCikNWYzR76hcPoGBcFSG/mG
hxJ7sJHLOeQbdBX5opUqx5FvvH/2abH91XYg+cZyt8aVmF8fkG/U1Trhmwlk
33jyUtdaZIPsG/0Kxx87zuAh6Fh+neyNIojI5DJ914YHpVANlXexZfAl92Ok
51M88F/5FhP9sRJWR5tfFxPXVST/uBNOu3NTOhb5h7pEHNQSwpB/bOlk7Anx
80X+wT52Slv+qhvyj+zB42J8BTbIP96Fl2d6XbyJ/MPJ8dgNwVZV5B87P0fL
HXx0GvkHGw1zqaz0IeQf4ize6xrHp5F/nIm69cBj8iHyDzu1ccdlAtk/ot6G
zYoR1x+Ee1wlHzkyidfZdYvEeeJ4NBp8c5C9EHakDNlQfCb7SAJr51mdXBPk
IwwWFtXf0zWQj6gkX82/yiCLfKTonthvrq6jyEeG7/Q20UWuIB95QN+2Wy8k
C/nIua20X9eJr09E2v3G6ngKVKvWvLZaJXtJVGw5MxubKPKSaXsZp9hweiB5
Sb+S3Ec6vq/IS9Zes6xo3hFDXlIazj33l/j8jHxhyW4nnwK9pe2pP3/JfkKF
YTPDV3iRn2TSvsjwzN9CfoJzY1Vb7yhHfkLnHbQzkfh8SwT8V82gZPgudX/P
5BrZU7YYTz7dlXMASJ5yhnPQe6xpBHnKdPm+Wwt5xshTFAu9f48Rn4/AUPaa
PuU5UA5Wiitvkn0lYLH+4rbaBeQrb+8vMQ4TYrF5WakX8/1RYPgiTHUn8fEk
bzm/R3tya50GSN4yJ3G9jC64C3nLaHC/yrJUO/IW+zv+fwn/eItNcJh44RbZ
W5w2RbWvLpG9ZelB2grjEB55y04HC21CGR6smy+7b7BVAF/HE7Ov9/DwWDmk
tFGwGnJbwlTDj+LBr1+MVlWzDkLpn7PKZeFgtmogx5TiA/jINfRsZ8Ihn0nM
EGs1LM5DPhPWw3zrSGAG8pn3Dz7rxMwkI59Rcos6d7koAfkMNV+abmZdFPn+
/gdTyqOTgchn7OInf+W4PkQ+E8uvQTf33hH5zGz4M8mfkebIZ5ipTXn2zmoj
n5l9K7reuU0B+UyCucajZAMB5DOdnxKcvAd2AMln9sg8YGmda0Y+k7AuF9JF
IPtM867aFvcNss949FMx8xH3X0V7l2r0JIpA7bb05T/teOjrqUx3sioDz0/h
soHE74GgJIWySGolDMQ/9Da8gkd+c8giZ+8Fj1jkN8YlPSfx18OR35RdbDkf
0umL/Cbvo9Y35ko35Dc8J6MWfkrYIr8RnJuv+kVhhPxGa/KgPhaqhvwm2IXp
Gt35M8hvxJdtS7o8WJDf8GuxjiuqzSK/cbhso90h74/85pt+E/Uagew3XLz0
m+bE8XlYaJFg0ZEBuzX9MkWI+6PfF3iKRZYLQOp8jC1jP9l3Boqm+W0PmiLf
qb74mvU3sybynatUN1+PrMsi3zHKaeDvTeNCvvMKh1XFnFlDvnMg9KG6sWce
8h03yb0TNsTXZ5zTv9kRngLG3+/2fFole49HaM1tigpR5D2Mse3yHwr3Acl7
TH4wSv8q+468R3Bj/REbrTzyHpuPBm3/+YELjcown3cc/GTKd2ffIvuPpsl4
7+1zfMh/onFX/VT1KIDkP0e6ekQzuyqR/8R1281mEp+Pz17N/fipZGBwev0L
Wyd7UFZanszRakYgeVBE7mFZOedR5EEWI+bbo79bIg9SaElkmyE+n8mS/XTl
YiK0HXBa9d8k+9CC5Ll4ukOLyIfCtsVv0/BLxEpTbhrxnImCCY3Zs0eIjyd5
keFnI+qDfrRA8qJ9EjGKYc49yIvUbPwdtrv/Rl6UGHqjivCPF5ldTX5oy1WP
DfO8nrk6+Bg+PTmqVU08T/IjbPpn6EeeSeRHO+jZp1VOuCE/UhKwvLJIIPvR
lwfxlsPSadg56+zR4KUIkFjrclUmnid5El9C+VGG2n7kSTXHqtiomo8iT/Lc
K1y6SSB7ko669NgvqRKsaMvra8loCKzm0s2EEs+TfEmSQjKjW0oX23vp8+ZC
vw+wlYhR/Hc/C8mbmMyHjEo0opA3KaUr0KcqhCJvulBV8L/3I5O8ycWug692
i+xN0gsaWNgS2ZtOJeY1BhPna5I3wQ3Dxq5y4vwu87OnhaYCDNMOtv91IV7v
rQthlKkaVvT2OokT95XpbZujoRfq4Gmy6LTmaxxks+6/YbjcANQSz48YHcIh
nyo36KdN6c5DPnXRWsA7JzkD+dTJm3MceYRk5FMy1AZLBz4nIJ9quxW2OPo9
CvnUl7UrZlOMQcinbDhfrPM8fYh8qvtJZkbThCPyqQLq4nvK7ebIp2K6HL9P
C+kgn+pxHB/mUlZAPsXIHaEhPyWAfIr2gNFXD5edQPIpqtH0ny3hrcin9Cos
vPoIZJ86bCH75cUG2aeGb8eP3yfO10qUh+TMjxZBjUkWIayDuD53cdDu0i4D
6VeBQqHP8JCXE5W8FVYJjiVrrwrV8civ2rZ9Djv8LBb5FXsAbpdaUDjyK85+
CXqtZV/kVylREb1L827Ir5g41wKN3GyRXzEVfFxQPGmE/MqQxW2/0Lwa8is+
J/dzyulnkF+Ja7iav+A8jPzKnMbE8I7VHPKrPk+XphqDQORX9CajHOsEsl+V
QTn9Q+J8fSzgelpZWgaUPS21ciPO1/7SF8SwkQJwH/v7PrGf7FvK7/wqD140
Rb61bz0rSk5DE/kWw9a3dG57DPmWtbfz8hADN/KtZt728jGGdeRb2/3j7t1M
KEC+tdd40+we8fWt3/JXlbqVAn8cNF9SrJG9q09nz2kvWjHkXap7gz0cBPYD
ybtseXKMVBgGkXd1vnnz4Zy9EvKujhfRHP+Nv0y3dK+/x+NA729RjdgW2b/0
y6LcE97zIf+6jL1U5/5BAST/MmdSiz1EeI/8K2xn+nwe8fmqj2+2xFAnw8mj
w4ct18keZj/IcKlB9SCQPIwPfwKnrjOGPKxZ3fZswLAt8rAqk9E7c8Tnizb/
FBidmAjGAfrq//kTycdWdwVVx7cuIh8T9glzkE96ibFoO8i/H4+EtOf1CfzE
x5O87Nylmth36nRA8jLDbapO8m69yMtK8dzXaVi3YSQvs7hq+YXwj5fV2C73
Cbg3YOmBnbmPZR/DriyHcw3E8yQ/+7Z4z1ycewr52ejO2idM8veRn72kTPzz
h0D2MyeFxX27NTKwNPaqD7xpEfCUa/m6JvE8ydMErq7oMOIGkKdNu227gt8h
gDxtS97/xn/7AZKnUUy6aCWtlGKupmmJUwohYN0UzvGEeJ7ka0fH5r76dRtg
vfkb73nP+EC2vsyBX8TzJG97cuxntG54DPK2Dj9TE0qfIuRtcCpjhfCPtzGZ
d76gcHiEscOvTJ1BF+iV2/VphXie5G+mtgw7/fGvkb8lsGZ0V187i/xNxq3L
fOsff9uepV7k6WGGGbkpKYQuPYS0qrcvJ4nnSR63zv9HWCI9HnkcW2izUk7v
T+RxFzPPxRL+8bjrrLhLbf7OGO5QeVz5qCfM9IX6LBDPk3xu8q6+r6seM6Zq
trfiT78DeLxXX/qvb5O8rnJnSRDVA03kdX0OS4zHzkcgrytkKOBLU1b7/3rd
G0ncsyUC2esexWnMKxLIXueA75NP3iR73Qnd7UPYMtnrnJYCwHWS7HX3hjvq
vLrJXtfBv7CVmotHXtfsmCQv6IZHXvfZp5ye8wweed3vlvwbN77ikNeNXfdk
/2uDQ17XKPfq/fTcHPK6Sx+Or1qpzCGvo3q7Y+RO3CzyugDF4MC8dzPI6y5f
4BQyaZlGXteseiDiVecU8jrvcvErT15PIq8zNzEKPEjcF5G87kys4KdB8XHk
dTGVv5+ZfhlFXtePO5YZHPgLeZ0tZ6WKKOMI8jpa+eX3ukXDyOtUOHK+RL0e
RF5nsqt5iOLdN+R148v+nLuovyCv47eji+k88Rl5HY1NZByDaw/yurO2bUNs
+7qQ1z3Qt6BPPNWOvO6yKAtlx3Qz8robx+Sa8nd9QF5na1edwn66Fnndr4i6
p0BTibxul83LW/bzJcjrlqTPV8TSFCKvs9ZnWBH5lYW8LuAG4+VzxHU8yeu6
w0tdy/gTkNcN3I+rY96IQF5HW98TXlfvi7wul5oqfB1ckddJJWnP/N1rgbxu
lVaPl0JLG3ldxfkHN7gdMOR1Xy5WzGXNHUJeF+RzOGmb+DDyumRfrW6alkHk
dQ+OVGkT/vG63zlPahoJZK+jjUr5cXmL7HVS8rvu0q6TvU7fu3ab7TzZ6/yr
N5xrB8lelxnfmb5ci0deRzXM9T6RuI4neV16VqbF9f/ue9DZ2DJtaYZjhTOS
qXTE9fz3GvUyy4+APf3zYTIdB6W4NqHQ2XbQjH4j91YEh/yO77gDpU57LvK7
xq6uM2eo05Hf9Wr/8d539SXyu752raRpmSfI75aqzA8rfApCfsd8R7Gzh/Yh
8jtDtgNqmab2yO9ilgQKks2MkN9NKNhvGthcRH53z4Uh3O23EPI7HfGRCVHj
bUDyu1nFmzwnXyUhv6O7Jv2/nwvJ79pY6KX/6zUkv5tuf6P9Y4vsdyvSxwku
G2S/a+5SaolZJPsdQ+XN35O/yH7HQhjsyG0l+91qmmLhsRQ88jvj7+XTqneI
n38Bk1cAazM8XWeUYOLCg2pN3THLplZwLvpJd4W4zvCgVLSwU2uHvjj/GFp1
HPK8t1W7TuF/5SPPu2zleOzBZAbyvOjfb6VYGZKR54npXPg7lhiHPI/2wMnx
r7JhyPMCWnVElVR9kOd10xo6e79wQp533+S94I0VU+R5AVpCOwZn1JHnJXwq
dFAvk0CeJ2ORQl3rtxdInsdIV17i1tyAPO9Ii0zO5j+ep8jXvyOGQPa8/FLx
X1F/yZ5H6DCpu7JK9jw1psA972fJnnc/tBlWiPtwp194msrQWmDQ2c2gRtwP
Pfw4+faeXANc9oi6s0JcZ7weK6PUa2+EXwzXxa+o4JH3iX0LOCuenYi8T1O7
aq89dTTyPja24MKgjMfI+5qu3XzeveaBvG9LQiu3aL8N8r429zm3uBf6yPty
ptOM1M6fR97XH4cZmHVxI+/L/PiZu395AXnfCxXPQMYfRsj7UvM1Cf96n7U1
5+f/7vched+38bKpgwSy96lcdUhi3CR7X2zQtrTVP2TvS4z3WT43TvY+rn3R
CUUdZO9zux+DoyLuE0jed5TTTH3QHg9bBjzVCQ1N4Ht1V16TIB7WChUOnLvX
ClSFsZ0UHTgw3O29c+RvGwjr77178iYO+Z+IWeT5bx4FyP/a8pl/pY5kIv8r
f2MfcLAjGfmfkf1rafjxFPnfoxs75NVpIpD/Ec6ta7J6P0L+l2sv30Fhcg/5
39AIvrJpwQz5X7IGB/NtmqvI/0Snmn5TdJ5F/uf6GEsYyDyA/M+6ZkvyBUcP
8r9d1c0mW//436PtizoFBLL/nfU8tm/lL9n/sg8qqp5ZI/sfxki9koEj+18v
1ZL+AnEdeNHJV0iMeB1kEjy2KVdF/P47SUb4TdeD/yUHFlwYHpJ63H2F7jeC
VaeNwJoGHvmg7NoZ/4y158gHpd63WC6yxSAfTOGnevxWLBD54LsXzFSCG/eR
DxqWfsFp9N1FPnjoppCxcdwN5IOaTwLopsUuIB+0Lt+mxviQH/ngZzexuzjd
NeSDzn0OX0tO+SEf/NTb0UL4xwcLuNKPDBDIPlil5qf6bIvsg3k8A5daide3
ZPE+twPRpXAzmrlu/2+yF4YM1Atn/3FAXpgrZvTQit0EeSHtvr9GHKtqyAvj
HtAyvz8ihrzwRM1kkqMiNZC8MGJSbWRB6A3yQk4l46G1f7wwkW5jyI54zJXl
7FA5kAvymlcvHyV+vqscf3pOzhYDi2H/a81/PNGpLzOL87k88kQ330tuupkc
yBMbOeTerb6cRJ64m6v+UOMaJ/LEQq4lwr+eKK7iF/ibQPZEYdGIeWEC2RP/
CpweNtgke+I9h+YbL5fInlh40vKIyQTZE90xO5qkTrInGjw3e/UjG488kU1j
Pi3UmTg/nDoxxB3fBAa/NXBbosT9r8COwDy1VqA4Y154thcHV/Zz9B7+3AaG
nHrcyeY45IubjcGff9QWIF+cdeuoZzPJQr54udi9dYdwCvJFHKUePsY7Hvki
Ycw7xfdhBPJFJV79ynxOX+SLtJRzcslqLsgXv58s5f2zYY58UXj3tu2C/FrI
FwWVU6ll6GWQL9qlSDxvEWJCvljNJ3R/6cgX5IsPeA7Ob/3ri5uVUpUEsi+y
asU58GyRfdGV/4Ze6hrZF0skxwzD8WRfVFcwjjb8gYeSyg6woa2FWF7wSiXu
6xlUjDZCqonj+z2rzmXiPj3hooHiIe1GYH9HOHlKB4/80T9U3oM17QXyx+69
fzOev45B/qhQb83WvhWI/NHlsZWF9E4v5I+3ShoeSLyyQ/6oIag08uH4TeSP
+ZY9T4wblZE/ttMIP0jjOIH80dZL90BP41+yP6orrx6Kjkb++LupZYzwjz9G
07PyDxHI/uiaGhdWtUX2x1r6w9e4ieunmtrX4v4ypdB2a0Sh/zfZIzOaGdZs
Gh2RRx52SNBupTJFHrk8EMS868cV5JFGjWs7lb6dQh4pYF4fKlxGCySPnOi1
zbviUIU8UvOumu3GPx7Zx7xw/RHxWPcgM82KRC6kBER9vk4c38o4r06zxGL4
9lJ8o2eF7JUUpUHpeyfPIa/kns6SKqs6iryyueC+T+nPOeSVb0K++c5ZKiKv
dBR9skn4xyuz+PNsponHllfMhuW+pgPnXFb1+j9//9V69LPa0eIzyC/F7t3i
j7++H0h+eVJ7/N2nx23IL/d4dbz6+49f+sqcX0shHtfOXTtlPf8a6JlWnzT+
JXvm2WC6Q7b7+ZBnpj6nYr5ktYQ8k1GeP9/e1wl55rjK+DPCP55pUeO3vZNA
9syasq/ahQI7gOSZm9mYhV5kNvLMpOLti//1kDv3dgw/V3gFtsb+9gbEY5Jn
NmRYVrgzjSLPFK3gdD9P81OW5Jdin1N4/+tFJL8MTIvLlyKQ/fIOVhTktUn2
S21RNcr5JbJfqtQ7qOImyH55Rbz8aWQX2S9Lffd/PZeDR34ZyNJGc9OFeJ14
IXzX4lETjFywlosSx4P07dH6W2dbQfDoQ8HL/ThoPmArfaauDZLk8J81iNdJ
kmem09915R4rQJ4pP9F73TElC3nmlRnRbDfDFOSZqUrvlNt645FnvhI7SelT
FYE808WG/12zvS/yzJmyef6lDy7IM5XuW7zR972NPPM67rtjeKUW8kzhl2F/
eGRkkWe+yN2teMyfGXnmtj+dQd9ivyPPbP+tfYzwj2camBZm1BLInnn8Nc1O
qS2yZ2qOsD/sXyN75oGjHz8Q8GTPzJD4oLqfOC6mhxebg/7UwN5NkY2OGjxo
n/pTsC+7Hi7u7KpdicbDIar2tD3yjaBj8/2Rih4eeWfL24yUDxsvkHfujrnl
jF+MQd55WbH4gId5EPJO/MZ42qsQL+SdtS81XES22yPv1GQeVktcvYm8s9Oq
YMAsTgV5p5X+IyVvH0HknaKaMtNCLBRA8k5XxuTR8pp45J05E404wj/e6Wy1
+8oIgeydl9peVbdvkb3zcdqX05eJ8+EVGuYo2F8KjaZU288skv1zPSeRNUfU
CfknFS7mBe0DU+Sfi4wbzJ1W6sg/VW47Npt/EEf+ORgSonU/ajeQ/FMl91DT
kfBa5J+i5WlMm//4Z3RU/2Qw8djh44RmzGgOtBZKtroQ5wu7vg8dD52I82HT
g1CGf3w0Tif1/Ea0AvLRj4Of3/LVcSEf5ds4sy/FfB75aIuyfG9U+1Xko0Je
17YI//hoTFbv21nise/O0ycGA9Jhl8ZQAs0/fy933ZgxVr9KEnmpUJNth7MH
A/LSneVgPRHeibx0oMqddusfL3Xx5PySRTz+nirwYNfL17ApyiA59Jfsp7fK
ZKebzx1Dfsp53b57RWMF+WnNWZYYw7/3kZ8eHHMpIfzjp8sDzOK9BLKfrnp+
rAzP3QkkP2W6e6O8+F4B8lMh0YKl//4eNnHC2MtpNhXEqumnzInHJD8tPWqy
rKI4jvz0CM1r7XN+OzGZ9vc3vHli4cQeoQ/z//ipSiMBFlf6kJ8qteLytv7x
U4a9hhuODzaQn05F6rQGHgtFfjrKkve/ff9YxcRt5rhnUOisVv/tH0/Nlh1d
bfUsR56qofy2cP0fT6U9auD0hn8GeWqq5FrFkQJx5Km3S3LXCP94akX30mSt
TTPy1F19XiJ///HUrF11Kvkrd5Cn9ospexL+8VRdrVesFwXTMIEvjN8rXaPB
yzmn77/7oUi+us/0SGM5fbIsyVMfLRiM/Xf9IHnqpSuPb8oRyJ5KaWXtG7FJ
9lQ+Bvks5mWyp/o48IeemiR76v1K9sO7usmeqmwghVskXj9InmpMJSKg5Prf
fRIiZUGuTUBgPzLwRYI4nvy0fsLJViiyP2r7mThOdzw5eFexvA0uVTPw81vj
kK96KqXf6ifOEyRflTQ7ofShLgv5akih+cOeeynIV3X/Dl1/vRWPfPVtj8LH
s98jkK9OjRx0yUrwRb4abNXhUkvpinx1grrU7FbLbeSrhxnWQsaotZGvtroq
fdrqk0W+eu28ks7fM4eQr44cNmindxpEviofGgOEf3x1b9xd7D8fIvnq90H1
gPNbZF9do7zNvrBG9tW/BtX8Z+bJvjpVtr/Yknj92OnoHxo/VQNJK8kXTWvx
cI//fbDmy3pg+BTY3hpD3Jea7tShOdMIe6p+br96DY/8tTKM+4/OsZfIX+V2
X+jVPfQE+etr2q9V7xKCkL86VvLU/+70Qv56SKcnUuaUPfLXWPPa0AoRI+Sv
JpJfcbXbLiJ/vbzkeLBPUgj56/KrTqEfFRRA8tejcbS7HXWeI3+NtFP5TfjH
X0Nvyrb951EkfzWf7Hzet0X21wc4S1lT4vUj9nWbXOJGCbz6OcRjvkj2WNMO
XM6v207IY//KvlS2rzBFHjubxCr84LU68thxTa7Vm7ISyGMp9AY9GQP3AMlj
l3dQhQ+w1yOPtVIoMt38x2Odect2RBCPvfjUV0fe5cBYYLO9H3F+3dEyqRZm
VAw91leviq6SvVYu40dI7IwC8lr9SsWS28rcyGsVelXpDU4sIK9lmuQWljig
j5F8VrnhY/t/Hhpp9KJT0CgdxEefX6UnkL12YHVHwHPFs8hr9+b+T113HhfD
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
   "], {{}, 
    {RGBColor[0.88, 1, 0.88], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Hec13McwPHfHTpcou6scKtxd3V770Pdddd2GZGMyyjlLiqFVLairKLM
BiqbUCF7ZBQaREZlRaGBUpTn53F/PB+vz+f9/eP3/X0+v8cvubG5oSk6EolE
0TeqpTGxkUie9rGJ5mTesq/TXVqsU7Wn/qeVulhrdKtm6BDtpfu1Wpdpre7Q
PL1O63WPlumT2k03arJ2195RLS92Iq9b9tA/tUBv0b2UWz+v3fVnTdXTdR9V
1i/rH2Rbj9HdlFg/rGuIt84NH6Mn8ab13xRZ36b/UmH9km6hq3Wjvsp2cu2v
1X8otX5CN5Bk3U1fYyf59jfrc/xEZ/vTdCm/k2U/Wh9iNXH2OfoGf1Fof6u+
yK90sT9fX2EbOfaT9HG+IzHcm97Es/xIJ7NTdQm/kWk/Sh9kFe3ss3UKL/AL
6Wbn6UQW8i0J4az0Rp7hBzqaDdDLeYDPaGuWpZNZxGbSzM7VCSzgG04Id6w3
8DTf08GsQS/jfj7lCLNMPYdrmM/XHG9erdfzFJtIMTtFR3Ifn3C4WYYOZjyP
sZ7jzKu0P83MYiVtzLvq2VzNo3xFe/NK7UcTM1nBYeZddBBX8Qhfcqx5hfbl
Uu7lY1qbp+tZXMk81nGMebn2YQT38BGx5ml6JuOYyxccbV6mvRnODD7kUPNU
HchY5vA5R5mXai8uYTofcIh5Zz2DK5jNWo40L9GeDONulnOweSctpp6h3MX7
xHjWUYuo42Lu5D1aedZBC+nBRdzBuxzkWYoWUMuF3M47HOhZsiaRSEL47YT7
D3cY7iWcdTi/cCbhe4Z3J5442tE2/I7CbyHcb7izcA/hbMN5hTMI3yu8f3jP
8D7hczmA8D+ZTw0XMI23wzPv9T8UGY2g
       
       "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, 
    {RGBColor[
      NCache[
       Rational[5, 9], 0.5555555555555556], 1, 
      NCache[
       Rational[5, 9], 0.5555555555555556]], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1WW4VVUUBVBCxEAkDVRSwQCLBlGUbqU7FRUF7FakwwAF6bQBKZUOwcTu
xMAEuwsxxvz8MZxr7fvu5ZxdVho4vOOwQgUKFCjI9kL/Z2H/eULezrk0oyb5
u8LsQxH2pSj7sT8HcCDFOIjiHEwJSlKK0pShLIdwKIdxOOU4giM5ivJUoCKV
8u96riflZM6jObWonOfx2VNyCoNpQW2q5Dl99rS8g/NpSR2OzvP77Bl5JxfQ
irock/fy2XY5lQtpTb08u/E35UKuohtVMwfGn5XTGEIb6uc9jb8lF3E13amW
+TL+nLyLi2hLg8yJ8bfl3VxDD47N3Bp/Xk7nYtrRMPNn/B15D9fSk+OyDsZf
kDMYSntOy1wbf1fey3X04vismfEX5UyG0YFGWRfj78n7uJ7enJD1Nf6SnMVw
zub0rKHxHfJ+bqAP1bMXjL8sZ3MJ52TtjH0ilzGaM7L+xt6XD3AjfamRfWT8
FTmHS+mY9TX2qVzOGBpn7xj7QD7ITfTL/BnbLR9hIidS0tirci6X0Sl7wthn
cgVjOZPyxj6UixlB/8yvsS/lo0ziJEoZe03O4/I8s/5buY7O2VP6z+VKxnEW
FYx9JJdwMyfrf5AbGZB10X8lV3MLtfW/yq35W0rrX5fzuSLvpf9OrqcLVfVf
yFWMp6b+Z7mFJlTU75RLqa/+U47kFPWPchMDs976r+Wa7CH1XnkrddS/yW2Z
K3VBTlGXkW/IBdRT/yGvzDypv5cbslfU/8iuVFPvkk3lw7Kh/EtOoJb6F9lC
PpY1ziVFW5oqK8mP8z7yIdlA7pGt5Ch5qvxJNpebs8fkv7KNHJS9Kb+RzeRa
2Uj+LVvL22Rd+btsKR/PuslCtOPU7ImC/9+dw9nA0TzOQJbxRe4mOYTVHMIW
OrOANbmf5FDWUZ6t9OYB3s29Jweziv3ZRAvuZGruMJmLfD2V2EY/lvCxzy+Q
j1CSzXRgdn7fZxfLtZSjO/fwnPFz5Qr2qOvJ0dykriIH8BCf6y+Uj1KWTszP
exo/Svbift7RnydXsh/NuSPPb7yi7MtidupLyPbMynf1h8tu3M2z2aPUVY/i
RnVl2Z+lfKYvIzsyL8+lP1L25D7e1heVzZiSZ8j542B1O2bm7/SHya4sYnv2
L3XUI7khdw6l1ecwN3ObO5591U2ZnN/PvUFxdVtmcG/WKvuJ2vqbuT57Pv9P
oYi+CbfnN3KPcZC6DdOzNtkrOXPU0o/gOvWqnDf20Z/FbfmN3KMUU7fmrsxh
9mLuEGpmPblWvTL3CIX1Z3JrfkO/KHsv5y97PfPNNeoVuetyDvSNuSXf0S/k
idwxuQcyV1ytXp67NveD/gwm5Tv6BTlTOZ+cnLngKvUyXsk515/OxHxHP59t
uZs4Ke/OlTn3vJxzTSNjE/Id9Ty28gMn5l25Qr2Ul3L/cJqx8fmOem7umNxR
1Mi7crl6PHPYwndUz3txmXocs3O38C0n5B24VD2WWWzKHcPxeV4uUQ9nGENz
BrmIITlPOa+cz+Ccm5xFBjGQAfSnH33pQ2960ZMedKcbXelCZzoxhpls5GuO
y3zkvKhHM4MNfMWxeffscfUSXuRvGhobl/Onns56vqRa5oOz1Yt5gb00MDY2
Z0e9gwPVrZiWPalfx26qZs7ooP6EUvkt5vCg/gjZI2eI5/V/UV89JudIXUH2
yd/yXuZPPswBtGRq/s3Ms1zDoTxGFxayNntXDmI5uzJP8pisF+31/wHO3VKl

       "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
    {RGBColor[0, 1, 0], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1: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
       
       "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1mXYVOUWBuCP7u7u7m7sQERKQJESBVGQVERABaRsGqRUVMAWpUHCpruk
u0O6hHOv6/y4r2ettffM7Hl3zBTq2KNZ98QJCQmJmJwkIWGVJkfShISl6t6y
t3xWJmcgtfWN5WX5mvxadpUZGURm/T3yiHwl6f/fs7NMw5t01D8t78jX5VzZ
Q2blls8uL7eYvcNz6pQ0VT8pb8gfeDk+h1LqBvKc/IIu6nR0U7eViVmoXu19
c6p/UfehDk30V+Q3ZOFe/VE5JT6X1vq7ch63vb6Cfqv6XZrRQn9T/khpHtOf
l1/G8bHGa3KZLYt1oC5Zuc/smJzK8/xnv4pm29Tv0ZwyrDXPbb5c/Sr1yMb9
ZsflNDpxx36VzLar3491oizrzPOYr1D3pT7ZuWte2XyH+oP4HpRjvXle85Vx
XuMckoMEqpjvlB/SkvJssH8+81/V/WL9yEkiNtqW37bf4hzHdyYXidlkWwHb
flf3j+9DbpKw2bYtbGUb29nBTnbxD7vZw172sZ8DHOQQhznCUY5xnBOc5BSn
OUNBx/CHzxzAA+QhKWdtK2Tbn+qBPEheknHOtsK2/aV+g4fIR3LO21bEtr/V
b/Iw+UlBVfNd8iNaUYEL9i9qvkr9Fo9QgJRUM/9HjuIpKvKv/YuZr1YP4lEK
korq5rvl6Li3qMRF+xc3X6MeHPcJhUhNDfM9ckxc51Tmkv1LmK9VD4nrmcKk
oab5XjmWZ+J64LL9S5qvU79NQ4rEWpqdkNPpTFpqme2T42gT68EVry9lvl49
lMcpGuttdlJ+wguko7bZfjmetrE+XPX60uYb1MNoRLE4J2an5Kd0IT11zA7I
CbSL9YrjNbsgZ9Kda96vjNlG9XCeoKn+qvyW4nFO9aflZ7xIBuqaHZQTaU/L
eI7JObHO8b30/8pZ9IjP1ydhkfq6zyyr3qQeQWOa6a/J7ygR14X+jJzBS7H+
+gTmqzNST31ITuJ5dSo6xHUmb8uf4vzF+ugvytlx7Or09IxjlklZrL7heMqp
N6tH0lGdgibq5vK6/J5u6kyUjOtQnpWvys/jnMm0dI1zLRPRnwX6njIbQ+L1
+vrysOwjP5adZGre4Nm49uV/sp/8Oc6TzMJgasU5kpdkX/lVrI/MwFv00neQ
yRjAEn0vmZ2349ntu86T7ZNb32TeS46UT8ldsq6sLp+RR+Qj8hXZXP4hS8nr
Xt9GntA/JgfJFnKTrCqLyKflPnmffFY2kT/J7HKd17eTp/SPy6Gyldwma8ry
8iAPqrvJZvIXWUgejd8R9aPq/nIN5dUZ5W7qq5+Qn5BEPdf+I9Q7qaOvJg/z
sLqP/J2S6muxfuqNVNEXlnu5V91BziGbem2so3orNfTlZFeWUjDWzPbX1asp
p88gGzGdxPqfba+q7s1vlDC7Gv8R1BuorC8k2/MjWfVrbC+rfoklFDA7bNZP
vYqy+vSxlkwjUay17VXUvfiV4mZXzAqq2/EDWcxWm5VRv8hi8psdiv8T6oZM
JcFsjtllCujb8j2ZzVeZlVZ3YRH5zA7GvRDXBlO4G98lrlnyq9vwHZns+7dZ
KfULLCSv2QGzNOoGTOZOHG/cx+SLa5NvyWjfv+IZGfdPXBN8zH9xfPH8Ia+6
Nd+Qwf5/xjM5nhdxbTOJ23E88VwkT1y7fE36uObjN4CUcc0wkVvx+WbnyR33
Dl+Rzv6/x29MPD/0DzGBm/H58b8gfq9IHtc247kRnxX/J+K3L+5b/QOM43q8
r9lsZjGTL/kinjnM4DM+5ROmM42pTGFyPF+YxEQmMJ5xjGUMoxnFSnbFM9Fn
3s9YrvGR2Qp2kiTuZ8ZwlQ/NlrODxHGvMJorfGB2jlzqVswmrfVZZrY9no/6
exjFZd6P5yk51S2ZRZq47822kaCvH8fDJd4zO0MOdQtmktr+S822cpd6cYxc
5F396XgOqp/kS1LZf4nZFu5QN46bf3lHfyqe2+rmfEFK+y82K6nuzALymG2O
5zV14ntwgZH6yrInKylmv5NmWdXN+JwUZovMSqg7MZ/c8Rw1u03t+J6cZ4S+
kuzBCorG8zd+M9TrqaTPIpsyg+T6hbYXVz/PPHKZbTR7Tf03ZfS34jcl1odz
DNcPlzuobXtF2Z3lFNEft32geh0V9ZllEz4jmX6B7UPUW6iuLyYPxDWtfk7O
Jad6g/36qv+itP5mXP/qeuqasf6cZVicN9nIfJjcTi11BXko7jH1y3IZhdXH
7H9c3UA9IM51PLNlBZlJ7onrTt1YNpafyqRyvte1jXOkbygHx3UY51ZWk0Vl
a7k/7g/ZMdY6nucyh1zv9UdjDdL4TyD/jPdV34hrXdbQD1X/D4Tk0oc=
       
       "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[{{1632, 2818, 2817, 1335, 1156}}], 
       PolygonBox[{{2819, 2822, 2821, 1397, 1478, 2820}}]}]}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[{{2817, 1273, 2820, 2819, 1745, 2818}}], 
       PolygonBox[CompressedData["
1:eJwV12W0FQUUBtBLPEAapFNawVYUBTsREQQRCzuwSKVDWrobpUPpUEDpkBSU
7u5ukHSfH3t95zszdz3e3JnxWejj2lVqJU8kEslomyKRSEqXSBxMSiTWpEwk
cqZKJKabX5cfy2flbvmOLCpLy3XyTdlKVpBHZQ35u8+nlMP0SrKSfErukFm4
z7xaviGbyvLysDzkc4XN88zf8oJ5X5zPY+ZNsh0Vzcdjdv5J2ZEyPGG/TV61
L2leZm7AWj2XPsP8Cc+Z98hiPGJeL1sz03lJ+nBzZbJyv/63bMZhx4vo8821
4hiP65tl++D4Kdkp/r1c00s5vtzckH/03Ppv5k8pziy7VHYj4lpzOw/oa2Rz
jjheVF9grh3H6GB3WnaOn891/V/yxLXXP6MEs+1S2400VyEbR+2K2S001+FB
frQ7I7tQlhv6OvI6b6b+OXfyh10au1HmqmTnmF1Hzpq7Uo6b+nr+5Dbnj47v
mhwct+vEOXO3+M64pW9gDmmdP8auGjk5YdeZ8+buPEmCjXZzSef8sXEfkouT
dl24YO4R9x3J2GQ3j/TOH6dXJzen7Lpy0dyTp0nOZrv5dOOS3otnSMEWuwV0
57LeO54PUrLVbiE96EkvetOHvvSjPwMYyCAGM4Sf+JmhDGM4IxjJKEYzhrGM
4xeu+Jl94p4miW12i/iV//S+PE8qttstZjxX9X7xjJGaHXZLyOD6/KK/RR5O
203gmrk/L5KGnXZLyej8X/W3ycsZu4lcNw/gJW5jl91fZHL+eP0d8nHWbhI3
zAN5mbTstltGZudP0N8lP+fsJnPTPIjypGOPXT7nzjJ/wV0st8tiN9H8HgU4
bzeFW+bBvEJ69trld+5sc01KssIuq90kcw0KcsFuKgn7IXoFMrDProDdH+Yv
KcVKu9vtJpvf5w4u2hW3W2Suy0NMs0tm95P5VTJyt75CNmK/4wX1P81fxTFW
2WWzm2L+gELxLOtrZQsuOV5CX2yux8NMt0tu97O5Ipm4R18pG3PA8Tv0Oeav
4xiP6htkG1Y7nl2fav4wnhXzTlk4fg/zP7Ill513p77EXD/uGfN+WZqy5i2y
AzOcl0Ifan6NJ83bZWbuNa+STeKeMB+SB51fyDzXXEV+E/e23BvnU8a8UVaX
beNaymNx7eMd7rM55DS9svwonme5K+5dWSSukfxXVpM/xL0hj8S9I6/4/F1y
qV5Vfhf3tjwQ96Z8RJaTW+PZkT/G7yRPxPcT7/x4H8j0aTxfqd0/8nWZWg6U
Z7gt6CPlVZ4hhd5R7uEfn0+rjzZf5xWS9F7yKFfiu5UXuZ/kjjWKzzEu3pPy
JhXpy4k4h+HxWR6nNVuZ7/wXZFcOcFgfLM9RkC/iHHrYV5YDOE0anuZHdrPW
8fKyJ0e4rN8nG8YxxurJ5GO0Ygvz7J6XXdjPIb2A/DyO0V1PLZ+iA7tYY3eJ
e80NojNGT8gy/MBm5todJL/5s+h0i/uDi9yjf8/fjNZv8ai5JZuYE985+cyf
Ro9rFH/PcIG79e9Yzah4ZuPeJ6/+CX/G7xX3NucppddnFSPj/RF/85BH/5g/
6BzPKOcoqddjJSPifRX3P7n1j5hNp/gbJt6F8XcOuew+ZBYd9WHx33V2k9Pu
A2bGd6Z3oD3t4hmiDa1pFc8ELWlBc5rRlCY0phENacD38YxQn3rUpQ61qRXP
PL/H80cOP/t9fufbuIfjeYl3C9ntavAb38Q7khnsIJvde8zga30I0+Mdwu12
7zKdr/QVnOUuvS4rGBzvA7aRVX+HaXypL+cMd+p1WM4gfWo842TR32YqNfVl
nKaEXptlDNSnsIXM+ltMiWdH/4tTFNdr8Vc8Q/pkNpNJr87kuO/jvcNJisU1
Yin99Zvx7jG3YCOT9E1kNL8ZPe5zfUm8iyga15El9NNvUNrcnA1M1DeSwVwt
etzneir5JO3ZyWK74xSJax+dvvp1HjY3Yz0T9A2kN78RPZ4DPUk+QTt2sMju
ZdmDwxzTC8d3F8foo1/jIXNT1jFefy6eD/bFz9PTyapxLJ4fvVJcJ06RknK0
ZTsLHX9JducQR+P+khcoFPdBnENv+1fj38BxrsYzJC/zIE34l1/tn43nj73x
b9QHybOkpUqcE8+p/Th5i9fie+AkKRjBf5SlDdtY4PxR8hovxu/hvd5NHuRI
3PfyPHeQzLGa8Rl6xfXQx5hvUIFUeu+4vvFzHE+jDzVf4gEa80t83/5f8H8f
o+8K
        "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
    {RGBColor[1, 0, 0], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1mWYVQUUBdAHSEoLSAkCEoKArXSDKKGIRXczQ3d3l3S3hN1J2YnS3Q0m
CoIorvNjffvsc98wc2uYQm2SGyWlTCQSKSiQKpFolSaR+In1DEybSNzHFZaR
Ll0icc3+gvlF0uhPyH9Zy636LMe3mDuRQr9TXmYx5xw7Ladxi2O15T+sZotj
B+RoKnCNlaTiZ+bSgJuso7XPb5CNyMDvLGSH/XE5iepsiPORg7ifqyznuv1F
OZt6cT76VtmZQvzJEs7bn5HTqcNW/aAcQ8U4D35hHg1p4/hG+XRcD3bqJ+Rk
arBR3yEH80Ccvz6bbeYuFOaCflbO4DG26YfkWCqRmrZ2L8vGZGRXdHaah/Ag
N/Q5fGruShEuRueweRyV4z7Szu4V+QyZ2B2dXeahPBT3WZ/LZ+Zu3MWl6LTn
Vf1ZMrMnOrvNw3iY//R5fG7uTtG4t9HpwGv6c2Rhb3Tm84WeRLG41tHpyOv6
82RlX3QW8KWeTHF+jU4n3tBfIBv7o7OQr/QelOC36HTmTb0J2TkQnUV8rffk
7njuotOFt/Sm3MbB6CymK2/bNSMHh6KzhG68Y9ecnByOzlK6865dC3JxJDrL
SCKZHvSkF73pQ1/60Z8B8R4ziMEMYSjDGM4IRjKK0YxhLOMYzwTe871bcjtH
o7Ocibxv14rcHIvOCibxQbyn5OF4dFbyjd6LkvwRncl8GO8PeTkRnVV8q/em
FJejM4WP4j0gHyejs5rv9D7cE+9xdKbycTzn5OdUdPaYh/MIN/U1fG/uS2n+
is40PtHbcweno7PXPIJHSbDW7gfZjzJcic4R83iqkJbpdptkBwpwRj8pp1CT
Tfo+OZJypOAlu+2yP2W5qp+TM6nLdv2onEBV0sXzz3yeZIbjm2VHCsa1ZxFn
7U/JqdRis75fjqI8f7OClFxiDvXjfY6fiXU+/6McEJ/xe/3euG4sja917Lyc
RWrHHpc3WEMG/UfHj5knkkqvJq+zivR6+ngnWRDXTX8qrrNcLzPKmb6+shyU
3v2mN6f0/vJOOvKSPkAWJ4m9el95G03pp98te3DEnFe2YYH5LtmVr81pZAOe
Nh/nDnM7Vph/IpP5GTqZD5DL3ILJ5o/4m6p6JbmWPWTXm9DXPJ+vSK3Xp5F5
eVwjMuqN43zMk/iQq1Sxqyj7MI8vucWuHk+ZOzCRD7hCZfsKsjdz+YJUdk/w
pLk9E3ifv6hkX142pB3jeY8/qehYOfkoj/AwD/EgD3A/98XzQFnKUJp7KEXJ
uO6UoDjFKBrXnCIUplD8DUFBCsQ1pwFtGce7XKaCnyW/rE8bxvIOf1DesXyy
Hq0Zw9v8TjnH8sbfMbRiNG/xW5yXY3nimaUlo3iTX+N8Hcst69KCkbzBL3Ed
HLtd9mIOn5PS7nEeMzdnBK/zc1wz+1yyJ7P5jBR2daljbsZwXuNSXF/7nLIH
L/Ipifi3qW1uyjBe5WLcC/scMplZbOMmdexrySYM5RUuxH2Ld0MmMZOt/Edt
+5pyGdu5Nd4FXjAP4WXOxz23yy67M4Mt/Est+xpyKT+QIZ5xnjcPZiPn4nmx
yybXsJts8T3oZp7OZm5Q0666XML3pI9nnufMg9jAWcraZZWr2UXW+J7xXpsP
k8fcmmnmTfxDDb2aXMx3pIv3g2fN+8lpbs5A83rOUEbPIk9S0NyBVeadZImf
iy7mQ+Q2t2KquUjs+cR8nermqvIY+c1tWWQuGteAb81pZcP4fWPeRw5zMwaY
C8XvINaZT1PanFmWkr04YS4g27PSXEx2Z4c5c5wjnc0lZDIHzf3imaYlU/TC
8Rk+NveR12Q1WUUOlCXpyVE9n1wYz1wG/9fHsyQbx3WW/WUm/gem8KYO
       
       "]]]}, {}, {}, {}, {}, {}, {}, 
    {RGBColor[1, 
      NCache[
       Rational[5, 9], 0.5555555555555556], 
      NCache[
       Rational[5, 9], 0.5555555555555556]], EdgeForm[None], 
     GraphicsGroupBox[
      PolygonBox[{{2813, 2816, 2815, 2250, 2814}, {2427, 2812, 2811, 2167, 
       2061}}]]}, 
    {RGBColor[1, 
      NCache[
       Rational[5, 9], 0.5555555555555556], 
      NCache[
       Rational[5, 9], 0.5555555555555556]], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[{{2811, 2132, 2814, 2813, 2496, 2812}}], 
       PolygonBox[CompressedData["
1:eJwV1GW4FlUUBtAPFCRUuvOCdJcgKI1Fl6R0ClLSohiAlHTDpbukQbFIA0xA
UVQUJGxFDEDFtX+s5917z32+O3PmzEnqNrDFgJSJRCIFyYqb6RKJRWkSiTxp
E4mzcrAsyShq6evIa3KofFX2lYWYqu4sczCcM/qBsjh91Y/IO/lY/bgsykp1
T5mfc+ohslT8nbqMvCDX00edxEh1R5mV0+rWNFXfxjF1f1mExeruMi9fq2tT
V31dvsZj6sK8qO4ic/JFzGmjzsAJ9Sp6qQtwXp2BsuqLcgOjeFSfjc/iGWmm
TsNx9ZJYL+rpb8jXmUZXfS6+VPejrTojJ9WryUg5/SW5kdFxXzQ3S8t76uR4
Jurr/5FvMD3WgHZmmTilXkMmyusvy008Gf+TFmbpeF+9NO6TBvp/5ZvMiHdF
ZiqYfyc3Myb+By3N0vOBelncC/fr/5MHmMkAslDR/Hu5hadoH/+LB8xvyoPM
ij1DViqZ/yC38jQd4rd50DzBIfVsBpGNymY/ypcYG/skfpuHzFNwWD0n9jPZ
qWL2k9zGM/Ee47d52DwlR9RzY0+Sg7vNfpbbeZZO8dvkpKprv8gdPBffQfwO
uajm2q9yJ8/HfqMhubnHtd/kLsbFvqAReaju2hW5m/F0ozF5qeHa73IPE+hO
E/KRnwIUJIlCFOYuilCUYhSnBCUpRWnKUDb2XuyXeOfx3uJdxPrGmsU6xPPG
c8X9c697uSr38gI9aBr3z32u/SH3MZGeNIvnN7+Fo+p5PBHPRE2zP+XLTKIX
zWNNzG/lLfV8hsb/pZbZX/IVJtObVma386F6OS1i3fSpeFu9gGG012fmE/Xa
uFdq6/+W+5kS71ifnc/VfWitvoOP1CviWdX5+EbdMt6BOjXvqPvJu1gY707m
5iv1IFkizkh1B5mFYXyqHyCLxTnHungeWZARfBvrJEszmpr6zXKL83oYm7mX
AawlLZXoyVLOxncZ57G6PbN5I87j2IPk0TfhBTbpN7KB9XEvrGUNq1kVZzcr
WM4ylpLMkjh/WRTPzgLmM4+5zGE2s5jJDKYzLc5jXo/1jW8m1sy9NGYCU/Wv
xXuNby3OT7NGjGeK/tU4h+IbJadZQ8YxWb8/zrj43slh9jDPM0n/SpyncXbE
uzZ7iOeYqH+Z43EOkc3sQZ6NNYp3GedkvC99O2axT38szjmy6h/gmbh//Zf8
Q1F9W2ayV/8u38U+0N/P2Hgm/RfcoIi+DTPYE3uLy7F39Q14Op5Tf4brsef0
jzCd3bHnuUQmfX2eimePPc01CutbM41d8Y1xkYz6eoyJ9dB/Ft8GhfSteJGd
+ltlWbqwkKNmF8igrsuTsWb60/xFkr5lvE926G+RZejMAo7EXudOdR1GxxrG
98Gf8T3oW8Q7Z7s+pSxNJ+Zz2Ow8d6hrMyrWVJ9GVqQHyXxi9gcF1M1jn7BN
n0KW4lHmccjsHLerazEy1lx/m6xAd5ZwyqyafIyVXNXnl81in/GSPiFL0pG5
HDSrInuznG/06WVNRsS70teQj7OG1JSnG4s56XpV2ZcV/K4fJNeTj6axj9lq
fo/sxypu6gfLDZSgA3M4YF5Z9mIZX+sHynWk4z6Gx54wHyo3UZ3+rCYVQ9hI
ObqyiBP+/gl5N324os8rt8SapE8k/gfgElFK
        "]]}]}, {}, {}, {}, {}, {}, 
    {RGBColor[1, 0.85, 0.85], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1Hl813McB/DfkmMjJHKVFCFH7jtHSqEiKzehcoXNldBJoQMVOsmRtlZp
nVvXttax2tG1dZ/WpVBRyX30fP/x3Pvzeu/3eOz3/Xzf79Vtn56aViWRSCTR
y4+uyYlEIROplZJIHFCfVa/hVVbKI9UnuZTxvMKRjOEFbmACr9HN519XbyKF
saRTqf+l+jRXMU/+VH2EBozjZf7X/0Z9nuvJlvuq91CbLF7ioP7X6nNcyyr5
M7U9l3EUGbzIjXT3+y7qzRzLVvkr9RmuZr48RH2UC0kwSa+f2pqz+FUerXbi
OlbLn6sduJyj6aH3hnoLx7FNXsBQ58e4iCQm6/VX76UOh+Q1jHLuyBUcQ0+9
N9VbqcZ2eSHDnNtxMVWYojdATeVsfpPX0ou35MYczw65iOHOj3MJRzBV7wO1
DXX5XV7H23SVb+MEdsqLGOH8BA2pyjS9D9W21OMPeT3v0E1uwol8Ly9mOh/J
93EOf8ob6E13uSnV2SUXk8NA+X7O5S95I33oId/OSeyWS8hlkPwA9flb3sS7
9JSbUYMf5FJmMFh+kPP4R97Me3GHcnNO5ke5jJl8LD/E+fwrb+H9uDP5Dk7h
J3kJs2KO4z707qQme+SlzI45i2fXu4tT2SsvY07MSTynXgtOY5+8nLx45/FM
ei05nZ/lFeTH+4zvr9eKM/hFLqcg3lXcf9xp3FM8ezwPn8Rexi7EzMacxazE
+47/A7FjMfMxp3wROx17FLsYuxG7yxgyyGQsWYxjPBPijnyXuzmT/XIFc+Nv
yw9zAf/J38XfcH6KK0kmkzQa8S2dmRjn+HzsKFvYzCY2soH1rGMta2J3WcVK
DlLBAcpZwXKWsZQllFFKCcUsju/OorhXiuLuWRjvhwXxDpnPPArjfcdexm7F
fsTMxxwzN+aEgpgv8smL2WROzDSzYxeYFTvETHYyg1xy2MEhprOdaUxlCtuY
zFYmUUk2hwHdNu1y
       "]]]}, {}, {}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{{0, 1}, {0., 1.0000000000000004`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.670961283285865*^9, 3.670961307061664*^9}, {
   3.670961547778977*^9, 3.670961553483768*^9}, 3.670961588121272*^9, 
   3.670962157855529*^9, {3.67096218914438*^9, 3.670962230012823*^9}, {
   3.670962369099587*^9, 3.670962399376567*^9}, 3.670962491627686*^9, {
   3.670962528735693*^9, 3.670962609993936*^9}, {3.670962677678957*^9, 
   3.670962686165195*^9}, 3.670962736694461*^9, {3.670962769129974*^9, 
   3.670962820468355*^9}, {3.6709628532136307`*^9, 3.670962860175932*^9}, 
   3.670962944033409*^9, {3.670962989550426*^9, 3.670963021164113*^9}, {
   3.6709631209779243`*^9, 3.670963185122457*^9}, 3.670963345480644*^9, 
   3.670963399915702*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"W", "[", 
   RowBox[{"k_", ",", "p_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{"k", "-", "1"}], ",", "3"}], "]"}], "*", 
   RowBox[{"p", "^", "4"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "p"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"k", "-", "4"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "[", 
   RowBox[{"k_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"W", "[", 
   RowBox[{"k", ",", 
    RowBox[{"1", "-", "p"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.670961317987918*^9, 3.670961326694474*^9}, {
  3.670961403601952*^9, 3.67096146340902*^9}, {3.6709615044011497`*^9, 
  3.670961509809022*^9}, {3.670962150496023*^9, 3.670962151501362*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "2", "}"}], ",", "Yellow"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.670962761166103*^9, 3.670962761182075*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
f4//D87nNB0=
   "], {{{}, {}, {}, {}, {}, {}, 
     {RGBColor[1, 1, 0], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtzitPQmEcwOHjlSJuBhMCcyYDm5egTZtzDlC/gWjGqYlkMJgU/QpoInll
MxEIJoPBhJfNC1kpogZ8zkZ4zu99/+d9z85obnM13x0EQRdrnS56NLXMDktM
E57roZc++okwazhDxb1rGvyRdGGFY164Mvvgl4T9Mkc8c2k2qFNscEqTd/Mf
4tZZijxxYRbVSdY54Ys383ndDs90frhlNmKd4ZBHzs0WtMANEecGdI8aQ/YT
mqPEJ6/u7Ostw97P6T1J663wm7T5du5Bx8x3NaVVjWos/Ge905imdVwPtM6Z
u//OvzDK
         "]], PolygonBox[CompressedData["
1:eJwl1DVslWEUBuBb3Aak6AAUKBRooRAguDtMJLgzYRVIkAF3SyA4BA9BQpAJ
p8hAgrt7AglSXBb0OWF4+r7n6/3l/nJTRuX0yS6QSCSS6OlPi4KJRHW9r/5H
HmYm/WlHCv387688wiwG0J7R1stwQV/JWGrEtkn/D3BUzGYgHRhjrSwX9VWM
o2bsz1oSx/Q5DKJj7M9aOS7pqxlPrdiftQIc1+cymEnmqtzVt9Ip9m9O5rK+
hoV6Jq/1LKbpqTzRd5EaxzYX5IQ+L/avp/NSH8JkvRr39LWyHdv0pbIJ+fom
2YXOcc6yPDu4Et9DtmEva82LZCN28ca8UXZiP9nm6bI2O3lqXi87sI/d5uWy
OXv4ZN4iu8U2cV1kIU7G/ZGtmB/fS2bwSh/KFL069/XtLNOb8l7vEtdKr8BV
fR2L9ca81XOYodfhmb6HOnGtzIU5pS9gGFPNKTzQd9CVbHNFrsV3I5e0OC9r
RciL+8ZwusXxrFXiur6BCdSN/Vsryum4poygO/ViW+vFOBPnzkh6UJ90MmhA
QzJpFNv7fHHO6ksYFe9LnJ+1ytyIe8XEeF/MaTzX97Ii3is+x7Mou3Mwrpn5
hWzmnXvoJUyTy2SmvCyryN6yibwta8gZMl3myVKyirxPbX2BPE+y3lZep6qe
Kw/xhx+Ot1heoKL/dZVTOUoRc0k5h3OUNjeUI9nOR57bvpeczilK+kxl2YYc
DvKb7/HMyykcobDPlZANGME2PvAs7p9sTfwQHeAX3+J6ywyGs5X3PI3nQ7Yi
i/385Gvc07g2DGML+Tyx/iWeBb0+Q9nMOx5bf8TDeAbjeY/3OH4zuMNtbnEz
7m88Y/Fc0tJ3+QeKVp3e
         "]]}]}, 
     {RGBColor[1, 1, 0], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1HmQznUcB/BnXcM6dt1HS85yzDDj2CuMZBop1zoS/ZNbGk0slcVgMIYo
JGnVMGxyRohQOXbZKGaoTOWPROSIjCu312f88dr3+/v5Pb/n9/y+z2+fBoPf
zBlTIpFIJLHIn4ySicR2uYNv2MkudvMt3/E9e9jLPvbzpzdZSA71uWd2jkJO
WS+iDw24b/YP1/QChtGGFIrM/5If0peGPDA7z3X9c4bTllQOmJ+Wi+lHIx6a
JbmPLfo4nuWC2Q25mhG0ozIHzc/Ij+hP49gMSjh/q8ylMxe97qb8gpGkU8Vr
CuWM6JS13ikn0pVa1ofkHIqd/7dcwsukOXZENqGSvkdOjevrv8okSurbZAs5
PvZVHou9ks/JGrJYtpKz5dPyt7g3ecn1bulraG49StaVR2VrmSGryiLZUs6M
zyJPxJxy+i6ZF9+Zfly+QG39sJzLD65xVn7MAJ6K79DxvXJa7CGlrL+WE+jC
v875X67ldTKpRrLX7ZaT6MaheH7kUl6Je4v94LL5bbmO0WRRncPxTMlPGEjT
uDZXzO/I9bxBduwbP8YzJfMZRDNK85/5T1zQl/Fq7B9luGp+hGyfNYsnPSr1
qEsaT1CH2tSiJjWoTjWq0pH+TGEb9+nrPavIDvRjMlu5Rx/HKsv28TomsYW7
5DiWKkexgGJSzUbwTJxLHl9xh97mKXIkH3CQFLPhcU/6Z/wS92OdS45+mhb6
dCbqm7lNL+tK8goZ+nwK9JM01vPic+jnaKXP4v24j6THvzMH9BXxHgwjy3qj
7EI+F61XyzbM4VPrtbIji/nZeqVMYxy9rdfLziyN3xDrAtmcabxrnS0XsElf
Hs+h7CkryufjGlzW0+U8Vumd5BL+0BvFHsR+6Wdpqc+Me9eLqKgPJVNfxvF4
JqzH0ks/RTN9Ku/oX3KLHtYV4n74nYbxeWNf9HkUUsF6SPw+6/kci2fN+i16
6m/H/nGT7mbl5VDeYz/lzQaTHtdjAhu4wUvmyXIIc9lHstlrtIv3Y3zsL9d5
0bycbBvnkss6rtHNsbIy0//HI40FwYg=
        "]]]}, {}, {}}, {{}, {}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1GWAFVUABeCVLunuJaRLukvSBBUsVFZsBUHSLlABBQtEQQlBOuxCBVvs
7k7s7vjOj2/Pufe9uW/mzswWFk0aPXGPgoKCbf4kR/jzo1zPmexLZ4pRnBKU
pBSl6WGyjBzpuJ/kBqayH10omzV89rPcyDT2pyvjzZdjpz6P4yiXY839Ijcx
nQPoRpH58jyiz2cC5bOeuV/lZmZwIJPN1eUl/Ua6Z33jCjyqX8HxzDJuwlv6
Kirk94x/k1uYyQXGrfhQP4gpej1e1pdmD3IuxnvymH4ls/X2fKafwFl6U97W
F8sB3JLzkN34Vl8mh2adXIP8XS6XW+VVshez9Atla1bzkfESOYiNjMp9k/VZ
xSvG18l+rGeZ8VzZmVv5Kvsj92EzPbMvsiIreNz4GtmHBfoc2YHP9RM5W2/G
O/rqXLvene/0itkv/Y88X9kDLjJuw8f66DwregNe1W+iV/bLuBJP6As5iUqM
MvenvC2/y8H0znmYr8yT2SdOpnLWN/eXvJ1zOIQ+VMmxPvtb3sG5HEpfquZ7
PvtH3sl5jKEf1ahODWpSi9rUoS71qE8DGtKInt6Pxlnfmv/KuzifsfSnMOv7
7D95d541DmNArtt8FZ7Sr+YUmuTYvKjck2eBwxmY6zZXladzzziVplkv7zb3
Zv85gkFZz1w1dunXchrNsp65YtynX8yRTDNuyGv6zQzO+sbVeSbPGJfqHflC
Pz17rjfnXX0NzfPbxsW5X78k6+tt+UQ/iul6I17XF8n+LNfnyS58rS+VQ/LM
5pxlDVbybK5D9mUdi4wvk51Yw5fGN8jBbGJi7r3cK+8i7xlfLweyIe+H8QLZ
g7V8n2dUDssx2RdZggdyf2RvZue6ZDs+1ccxQ2/MG/oK5utd+UYfkr3Sa/Kc
vpjL9b3ZrU/KM6i34H19LS2yV8Yl2a7P4WhmGhfypr6SoeSfey2ez7VxBi1z
XuZK8WDuG8cwLL9nrjYv6EuYTKusb640D2VPOZbhtM6x5svwcM6d8YygDW1p
R3s60JFOOd73y7JDn0sRI3N+5urwYu4VU/K+GLfkA30dC/N/ih/yLMrhbMme
Gf8PbVW/NQ==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1HeAj3UcwPHfGZlldaVESEV1mSFpKO0lSYMGaciMjEiyQqKMdlQapEKO
i7vD2XtvCUdl7729Pn+87v19Pr/nd7/n9zzfuzJN29RvnZRIJPr7MZ6/cyQS
A6mQM5F4XEvoEq2sJfRSna4p2l2v0zV6wnsv6J+8zbXmK/Rukq3naV+2Oe+g
jqQplSji9Vnai4LkcTxF3+XB+J3es0kH8QTXcDIu2nkTrNtxD9vNDumPvBrX
HNfLBPN/9BOepCSnzP7lsPVPNKMKl5Fqvlk/pR6lOG32HxPZ4ngwT8X35IzZ
/0wijRqu6y+dzBTSySCTqUxjOlnMYCaz2Op3DaE+pTlrtoPZZDseytOU4ZzZ
To5Y/8xrVKUQc8y36TAaUJbzZrs4av0Lr1ONwsw1366f8Uw8Uy6YJfkeqdbt
qcNus2M6ije4LZ4d8+Je6uc0pBwJcnj/RH2He9njvOM6mjepTlHnzNbesSav
43TtwkMUd7xQP2J+PAP9gmdjH3htqV4fz806Sz+Iz7deq0nktJ6kN2uHuK+6
Mu6V3qdX6HytqP30Rt0Q3033+rwT1r9yk+PmsXd0WewVraHFdI7eqn3iWnRd
zMlnnaFd45lZr9KHucp6kQ5gQewd/ZLnuCGeoddnaI+4h+RynKYdqcs+7zmp
Y3iLmlxOfudl6ns8wsLYP/oVz8d3i/vBfvNT+hstuJ1kFsWe0q95gfLx2Rww
P62/05Jacd9YHHtKv6ERFcjNQfMl7Lb+lsZx/7iEQ+ZLqRX3UZezgpWsYjVr
WMs61rOBjfG/Kf4PsMfvGc6L8VzJw+H4G2ev9Qhe4pbYTxwxP6N/0Io7uJLN
5vv0O14mJZ4ZR83P6lhaUzv2IVvM9+v3vBLPPO55fOf4e9dO3M8x553TcbTh
znjmFHDeVO3Go2x13gH9gSaxBynsnJnaM86Pe+Z4snbmgbhuxwu0P8e9/7yO
py2lvLZc74r9YD1XP4w9Zb1er6ag9bS4N/q+ltXVWk0fi3N0sVbSj2MP6Eat
rtk+7yLe+85P
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998831351824, 0.9999999999999918}}, {{
     0, 6.283185307179586}, {-0.9999998831351824, 0.9999999999999918}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.670962761531117*^9}]
}, Open  ]]
},
WindowSize->{808, 621},
WindowMargins->{{278, Automatic}, {Automatic, 17}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 173, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[756, 27, 2873, 86, 165, "Input"],
Cell[3632, 115, 14973, 400, 59, "Output"],
Cell[18608, 517, 14986, 401, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33631, 923, 1677, 50, 143, "Input"],
Cell[35311, 975, 4775, 156, 200, "Output"],
Cell[40089, 1133, 4938, 162, 177, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45064, 1300, 11175, 335, 436, "Input"],
Cell[56242, 1637, 75120, 1260, 233, "Output"],
Cell[131365, 2899, 56928, 967, 233, "Output"]
}, Open  ]],
Cell[188308, 3869, 769, 22, 55, "Input"],
Cell[CellGroupData[{
Cell[189102, 3895, 542, 17, 32, "Input"],
Cell[189647, 3914, 22557, 389, 225, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

